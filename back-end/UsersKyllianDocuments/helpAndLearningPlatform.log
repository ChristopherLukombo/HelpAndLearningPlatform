2019-06-23 16:43:51,488 INFO org.springframework.boot.StartupInfoLogger [main] Starting BackEndApplication on DESKTOP-U7R4BSS with PID 5292 (C:\Users\Kyllian\eclipse-workspace\TripsBack\HelpAndLearningPlatform\back-end\target\classes started by Kyllian in C:\Users\Kyllian\eclipse-workspace\TripsBack\HelpAndLearningPlatform\back-end)
2019-06-23 16:43:51,491 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.1.4.RELEASE, Spring v5.1.6.RELEASE
2019-06-23 16:43:51,491 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: dev
2019-06-23 16:43:52,653 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data repositories in DEFAULT mode.
2019-06-23 16:43:52,813 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 152ms. Found 8 repository interfaces.
2019-06-23 16:43:53,363 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$333c1d5b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-23 16:43:53,406 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$cbe9e595] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-23 16:43:53,412 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-23 16:43:53,416 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@17a703f5' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-23 16:43:53,418 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$f0be8847] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-23 16:43:53,423 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-23 16:43:53,956 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8080 (http)
2019-06-23 16:43:53,971 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2019-06-23 16:43:53,985 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2019-06-23 16:43:53,985 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.17]
2019-06-23 16:43:54,111 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2019-06-23 16:43:54,113 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 2572 ms
2019-06-23 16:43:54,362 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2019-06-23 16:43:54,530 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2019-06-23 16:43:54,594 INFO org.hibernate.jpa.internal.util.LogHelper [main] HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2019-06-23 16:43:54,710 INFO org.hibernate.Version [main] HHH000412: Hibernate Core {5.3.9.Final}
2019-06-23 16:43:54,713 INFO org.hibernate.cfg.Environment [main] HHH000206: hibernate.properties not found
2019-06-23 16:43:54,853 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [main] HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2019-06-23 16:43:55,046 INFO org.hibernate.dialect.Dialect [main] HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2019-06-23 16:43:56,147 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Initialized JPA EntityManagerFactory for persistence unit 'default'
2019-06-23 16:43:56,867 INFO org.hibernate.hql.internal.QueryTranslatorFactoryInitiator [main] HHH000397: Using ASTQueryTranslatorFactory
2019-06-23 16:43:57,697 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [main] Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2019-06-23 16:43:58,159 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: Ant [pattern='/**', OPTIONS], []
2019-06-23 16:43:58,159 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: Ant [pattern='/test/**'], []
2019-06-23 16:43:58,198 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3ce7a354, org.springframework.security.web.context.SecurityContextPersistenceFilter@33b2ba25, org.springframework.security.web.header.HeaderWriterFilter@10b3ea72, org.springframework.security.web.authentication.logout.LogoutFilter@6c7f804c, fr.esgi.config.CorsFilter@4a2929a4, fr.esgi.security.jwt.JWTFilter@2914a328, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@481bae3f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@183a508b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2d34866a, org.springframework.security.web.session.SessionManagementFilter@3f33bb6f, org.springframework.security.web.access.ExceptionTranslationFilter@32cec678, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@362c48c]
2019-06-23 16:43:58,378 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2019-06-23 16:43:58,680 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Context refreshed
2019-06-23 16:43:58,705 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Found 1 custom documentation plugin(s)
2019-06-23 16:43:58,745 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [main] Scanning for api listing references
2019-06-23 16:43:59,049 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2019-06-23 16:43:59,083 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8080 (http) with context path ''
2019-06-23 16:43:59,086 INFO org.springframework.boot.StartupInfoLogger [main] Started BackEndApplication in 8.055 seconds (JVM running for 8.505)
2019-06-23 16:43:59,090 INFO fr.esgi.BackEndApplication [main] 
----------------------------------------------------------
	Application 'helpAndLearningPlatform' is running! Access URLs:
	Local: 		http://localhost:8080
	External: 	http://169.254.76.241:8080	Profile(s): 	[dev]
----------------------------------------------------------
2019-06-23 16:44:34,869 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-06-23 16:44:34,869 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Initializing Servlet 'dispatcherServlet'
2019-06-23 16:44:34,884 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Completed initialization in 13 ms
2019-06-23 16:44:35,188 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-1] Authenticating geogeo
2019-06-23 16:44:35,419 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-1] Request to find user by username: geogeo
2019-06-23 16:44:35,506 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-2] REST request to find all new tricks
2019-06-23 16:44:35,522 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-2] Request to retrieve all tricks
2019-06-23 16:47:21,258 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-3] Authenticating geogeo
2019-06-23 16:47:21,331 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-3] Request to find user by username: geogeo
2019-06-23 16:47:21,366 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-4] REST request to find all new tricks
2019-06-23 16:47:21,369 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-4] Request to retrieve all tricks
2019-06-23 16:47:23,774 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-6] Authenticating geogeo
2019-06-23 16:47:23,847 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-6] Request to find user by username: geogeo
2019-06-23 16:47:23,875 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-7] REST request to find all new tricks
2019-06-23 16:47:23,877 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-7] Request to retrieve all tricks
2019-06-23 16:47:33,567 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-9] Authenticating geogeo
2019-06-23 16:47:33,638 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-9] Request to find user by username: geogeo
2019-06-23 16:47:33,664 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-10] REST request to find all new tricks
2019-06-23 16:47:33,666 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-10] Request to retrieve all tricks
2019-06-23 16:47:39,408 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-2] Authenticating geogeo
2019-06-23 16:47:39,478 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-2] Request to find user by username: geogeo
2019-06-23 16:47:39,506 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-4] REST request to find all new tricks
2019-06-23 16:47:39,508 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-4] Request to retrieve all tricks
2019-06-23 16:50:38,556 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-6] Authenticating geogeo
2019-06-23 16:50:38,626 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-6] Request to find user by username: geogeo
2019-06-23 16:50:38,651 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-8] REST request to find all new tricks
2019-06-23 16:50:38,657 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-8] Request to retrieve all tricks
2019-06-23 16:51:04,230 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-10] Authenticating geogeo
2019-06-23 16:51:04,300 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-10] Request to find user by username: geogeo
2019-06-23 16:51:04,327 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-2] REST request to find all new tricks
2019-06-23 16:51:04,329 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-2] Request to retrieve all tricks
2019-06-23 16:51:19,680 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-3] Authenticating geogeo
2019-06-23 16:51:19,761 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-3] Request to find user by username: geogeo
2019-06-23 16:51:19,788 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-4] REST request to find all new tricks
2019-06-23 16:51:19,789 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-4] Request to retrieve all tricks
2019-06-23 16:55:11,397 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-10] Authenticating geogeo
2019-06-23 16:55:11,468 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-10] Request to find user by username: geogeo
2019-06-23 16:55:11,493 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-3] REST request to find all new tricks
2019-06-23 16:55:11,495 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-3] Request to retrieve all tricks
2019-06-23 17:00:16,698 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-8] Authenticating geogeo
2019-06-23 17:00:16,767 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-8] Request to find user by username: geogeo
2019-06-23 17:00:16,792 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-1] REST request to find all new tricks
2019-06-23 17:00:16,794 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-1] Request to retrieve all tricks
2019-06-23 17:01:00,739 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-7] Authenticating geogeo
2019-06-23 17:01:00,806 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-7] Request to find user by username: geogeo
2019-06-23 17:01:00,830 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-9] REST request to find all new tricks
2019-06-23 17:01:00,832 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-9] Request to retrieve all tricks
2019-06-23 17:01:13,417 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-2] Authenticating geogeo
2019-06-23 17:01:13,486 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-2] Request to find user by username: geogeo
2019-06-23 17:01:13,512 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-3] REST request to find all new tricks
2019-06-23 17:01:13,513 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-3] Request to retrieve all tricks
2019-06-23 17:02:24,542 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-7] REST request to find Categories
2019-06-23 17:02:24,548 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-7] Request to get all Categories
2019-06-23 17:02:30,987 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-9] REST request to find Categories
2019-06-23 17:02:30,989 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-9] Request to get all Categories
2019-06-23 17:03:51,241 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-2] Authenticating geogeo
2019-06-23 17:03:51,310 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-2] Request to find user by username: geogeo
2019-06-23 17:03:51,334 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-4] Authenticating geogeo
2019-06-23 17:03:51,401 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-4] Request to find user by username: geogeo
2019-06-23 17:03:51,423 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-1] REST request to find all new tricks
2019-06-23 17:03:51,425 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-1] Request to retrieve all tricks
2019-06-23 17:04:08,881 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-7] REST request to find Categories
2019-06-23 17:04:08,883 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-7] Request to get all Categories
2019-06-23 17:04:10,357 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-6] REST request to find Categories
2019-06-23 17:04:10,359 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-6] Request to get all Categories
2019-06-23 17:04:19,447 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-9] REST request to find Categories
2019-06-23 17:04:19,452 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-9] Request to get all Categories
2019-06-23 17:13:29,362 INFO org.springframework.boot.StartupInfoLogger [main] Starting BackEndApplication on DESKTOP-U7R4BSS with PID 1612 (C:\Users\Kyllian\eclipse-workspace\TripsBack\HelpAndLearningPlatform\back-end\target\classes started by Kyllian in C:\Users\Kyllian\eclipse-workspace\TripsBack\HelpAndLearningPlatform\back-end)
2019-06-23 17:13:29,366 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.1.4.RELEASE, Spring v5.1.6.RELEASE
2019-06-23 17:13:29,366 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: dev
2019-06-23 17:13:30,572 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data repositories in DEFAULT mode.
2019-06-23 17:13:30,738 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 156ms. Found 8 repository interfaces.
2019-06-23 17:13:31,225 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9686d17c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-23 17:13:31,263 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$2f3499b6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-23 17:13:31,269 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-23 17:13:31,272 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@70f822e' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-23 17:13:31,275 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$54093c68] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-23 17:13:31,281 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-23 17:13:31,829 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8080 (http)
2019-06-23 17:13:31,845 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2019-06-23 17:13:31,859 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2019-06-23 17:13:31,859 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.17]
2019-06-23 17:13:31,980 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2019-06-23 17:13:31,982 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 2564 ms
2019-06-23 17:13:32,230 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2019-06-23 17:13:32,384 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2019-06-23 17:13:32,447 INFO org.hibernate.jpa.internal.util.LogHelper [main] HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2019-06-23 17:13:32,551 INFO org.hibernate.Version [main] HHH000412: Hibernate Core {5.3.9.Final}
2019-06-23 17:13:32,553 INFO org.hibernate.cfg.Environment [main] HHH000206: hibernate.properties not found
2019-06-23 17:13:32,700 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [main] HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2019-06-23 17:13:32,889 INFO org.hibernate.dialect.Dialect [main] HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2019-06-23 17:13:33,994 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Initialized JPA EntityManagerFactory for persistence unit 'default'
2019-06-23 17:13:34,711 INFO org.hibernate.hql.internal.QueryTranslatorFactoryInitiator [main] HHH000397: Using ASTQueryTranslatorFactory
2019-06-23 17:13:35,450 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [main] Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2019-06-23 17:13:35,856 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: Ant [pattern='/**', OPTIONS], []
2019-06-23 17:13:35,857 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: Ant [pattern='/test/**'], []
2019-06-23 17:13:35,890 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@757c685d, org.springframework.security.web.context.SecurityContextPersistenceFilter@14eb96e9, org.springframework.security.web.header.HeaderWriterFilter@116b0b32, org.springframework.security.web.authentication.logout.LogoutFilter@5aeebccc, fr.esgi.config.CorsFilter@5d8ab698, fr.esgi.security.jwt.JWTFilter@476a970c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@44587c44, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3f33bb6f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1ce57bbb, org.springframework.security.web.session.SessionManagementFilter@6f27730b, org.springframework.security.web.access.ExceptionTranslationFilter@f6cde7e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5cfe28e1]
2019-06-23 17:13:36,065 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2019-06-23 17:13:36,319 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Context refreshed
2019-06-23 17:13:36,346 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Found 1 custom documentation plugin(s)
2019-06-23 17:13:36,387 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [main] Scanning for api listing references
2019-06-23 17:13:36,667 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2019-06-23 17:13:36,689 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8080 (http) with context path ''
2019-06-23 17:13:36,691 INFO org.springframework.boot.StartupInfoLogger [main] Started BackEndApplication in 7.785 seconds (JVM running for 8.24)
2019-06-23 17:13:36,695 INFO fr.esgi.BackEndApplication [main] 
----------------------------------------------------------
	Application 'helpAndLearningPlatform' is running! Access URLs:
	Local: 		http://localhost:8080
	External: 	http://169.254.76.241:8080	Profile(s): 	[dev]
----------------------------------------------------------
2019-06-23 17:13:46,208 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-06-23 17:13:46,210 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Initializing Servlet 'dispatcherServlet'
2019-06-23 17:13:46,225 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Completed initialization in 14 ms
2019-06-23 17:17:00,444 INFO org.springframework.boot.StartupInfoLogger [main] Starting BackEndApplication on DESKTOP-U7R4BSS with PID 8680 (C:\Users\Kyllian\eclipse-workspace\TripsBack\HelpAndLearningPlatform\back-end\target\classes started by Kyllian in C:\Users\Kyllian\eclipse-workspace\TripsBack\HelpAndLearningPlatform\back-end)
2019-06-23 17:17:00,447 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.1.4.RELEASE, Spring v5.1.6.RELEASE
2019-06-23 17:17:00,449 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: dev
2019-06-23 17:17:01,718 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data repositories in DEFAULT mode.
2019-06-23 17:17:01,872 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 144ms. Found 8 repository interfaces.
2019-06-23 17:17:02,362 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$11b11510] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-23 17:17:02,404 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$aa5edd4a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-23 17:17:02,411 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-23 17:17:02,414 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@10cd6753' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-23 17:17:02,418 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$cf337ffc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-23 17:17:02,423 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-23 17:17:03,044 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8080 (http)
2019-06-23 17:17:03,074 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2019-06-23 17:17:03,093 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2019-06-23 17:17:03,094 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.17]
2019-06-23 17:17:03,254 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2019-06-23 17:17:03,255 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 2757 ms
2019-06-23 17:17:03,519 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2019-06-23 17:17:03,688 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2019-06-23 17:17:03,782 INFO org.hibernate.jpa.internal.util.LogHelper [main] HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2019-06-23 17:17:03,858 INFO org.hibernate.Version [main] HHH000412: Hibernate Core {5.3.9.Final}
2019-06-23 17:17:03,859 INFO org.hibernate.cfg.Environment [main] HHH000206: hibernate.properties not found
2019-06-23 17:17:04,020 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [main] HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2019-06-23 17:17:04,230 INFO org.hibernate.dialect.Dialect [main] HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2019-06-23 17:17:05,399 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Initialized JPA EntityManagerFactory for persistence unit 'default'
2019-06-23 17:17:06,157 INFO org.hibernate.hql.internal.QueryTranslatorFactoryInitiator [main] HHH000397: Using ASTQueryTranslatorFactory
2019-06-23 17:17:07,206 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [main] Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2019-06-23 17:17:07,770 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: Ant [pattern='/**', OPTIONS], []
2019-06-23 17:17:07,771 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: Ant [pattern='/test/**'], []
2019-06-23 17:17:07,808 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@23ea3853, org.springframework.security.web.context.SecurityContextPersistenceFilter@40d370fa, org.springframework.security.web.header.HeaderWriterFilter@76c587ce, org.springframework.security.web.authentication.logout.LogoutFilter@44948ac6, fr.esgi.config.CorsFilter@2c88a3e8, fr.esgi.security.jwt.JWTFilter@6f1163f7, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@757c685d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@362c48c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@e4348c0, org.springframework.security.web.session.SessionManagementFilter@5cfe28e1, org.springframework.security.web.access.ExceptionTranslationFilter@78e50fca, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3f71ae7f]
2019-06-23 17:17:08,060 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2019-06-23 17:17:08,399 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Context refreshed
2019-06-23 17:17:08,428 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Found 1 custom documentation plugin(s)
2019-06-23 17:17:08,511 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [main] Scanning for api listing references
2019-06-23 17:17:08,925 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2019-06-23 17:17:08,958 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8080 (http) with context path ''
2019-06-23 17:17:08,961 INFO org.springframework.boot.StartupInfoLogger [main] Started BackEndApplication in 9.013 seconds (JVM running for 9.462)
2019-06-23 17:17:08,971 INFO fr.esgi.BackEndApplication [main] 
----------------------------------------------------------
	Application 'helpAndLearningPlatform' is running! Access URLs:
	Local: 		http://localhost:8080
	External: 	http://169.254.76.241:8080	Profile(s): 	[dev]
----------------------------------------------------------
2019-06-23 17:17:13,801 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-10] Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-06-23 17:17:13,802 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-10] Initializing Servlet 'dispatcherServlet'
2019-06-23 17:17:13,820 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-10] Completed initialization in 18 ms
2019-06-23 17:18:48,341 INFO org.springframework.boot.StartupInfoLogger [main] Starting BackEndApplication on DESKTOP-U7R4BSS with PID 1800 (C:\Users\Kyllian\eclipse-workspace\TripsBack\HelpAndLearningPlatform\back-end\target\classes started by Kyllian in C:\Users\Kyllian\eclipse-workspace\TripsBack\HelpAndLearningPlatform\back-end)
2019-06-23 17:18:48,344 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.1.4.RELEASE, Spring v5.1.6.RELEASE
2019-06-23 17:18:48,345 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: dev
2019-06-23 17:18:49,536 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data repositories in DEFAULT mode.
2019-06-23 17:18:49,679 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 133ms. Found 8 repository interfaces.
2019-06-23 17:18:50,109 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$60d080ab] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-23 17:18:50,169 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$f97e48e5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-23 17:18:50,177 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-23 17:18:50,179 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@53a9fcfd' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-23 17:18:50,184 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$1e52eb97] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-23 17:18:50,189 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-23 17:18:50,743 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8080 (http)
2019-06-23 17:18:50,759 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2019-06-23 17:18:50,771 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2019-06-23 17:18:50,773 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.17]
2019-06-23 17:18:50,904 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2019-06-23 17:18:50,907 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 2513 ms
2019-06-23 17:18:51,146 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2019-06-23 17:18:51,312 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2019-06-23 17:18:51,386 INFO org.hibernate.jpa.internal.util.LogHelper [main] HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2019-06-23 17:18:51,475 INFO org.hibernate.Version [main] HHH000412: Hibernate Core {5.3.9.Final}
2019-06-23 17:18:51,477 INFO org.hibernate.cfg.Environment [main] HHH000206: hibernate.properties not found
2019-06-23 17:18:51,631 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [main] HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2019-06-23 17:18:51,812 INFO org.hibernate.dialect.Dialect [main] HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2019-06-23 17:18:52,949 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Initialized JPA EntityManagerFactory for persistence unit 'default'
2019-06-23 17:18:53,676 INFO org.hibernate.hql.internal.QueryTranslatorFactoryInitiator [main] HHH000397: Using ASTQueryTranslatorFactory
2019-06-23 17:18:54,333 WARN org.springframework.context.support.AbstractApplicationContext [main] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'documentationPluginsBootstrapper' defined in URL [jar:file:/C:/Users/Kyllian/.m2/repository/io/springfox/springfox-spring-web/2.9.2/springfox-spring-web-2.9.2.jar!/springfox/documentation/spring/web/plugins/DocumentationPluginsBootstrapper.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'webMvcRequestHandlerProvider' defined in URL [jar:file:/C:/Users/Kyllian/.m2/repository/io/springfox/springfox-spring-web/2.9.2/springfox-spring-web-2.9.2.jar!/springfox/documentation/spring/web/plugins/WebMvcRequestHandlerProvider.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'trickResource' method 
public org.springframework.http.ResponseEntity<java.util.List<fr.esgi.service.dto.TrickDTO>> fr.esgi.web.rest.TrickResource.getAllTricks() throws fr.esgi.exception.HelpAndLearningPlatformException
to {GET /api/tricks}: There is already 'trickResource' bean method
public org.springframework.http.ResponseEntity<java.util.List<fr.esgi.service.dto.TrickDTO>> fr.esgi.web.rest.TrickResource.getAllTricksByUserId(java.lang.Long) throws fr.esgi.exception.HelpAndLearningPlatformException mapped.
2019-06-23 17:18:54,343 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Closing JPA EntityManagerFactory for persistence unit 'default'
2019-06-23 17:18:54,351 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown initiated...
2019-06-23 17:18:54,356 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown completed.
2019-06-23 17:18:54,359 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping service [Tomcat]
2019-06-23 17:18:54,376 INFO org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener [main] 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-06-23 17:18:54,380 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'documentationPluginsBootstrapper' defined in URL [jar:file:/C:/Users/Kyllian/.m2/repository/io/springfox/springfox-spring-web/2.9.2/springfox-spring-web-2.9.2.jar!/springfox/documentation/spring/web/plugins/DocumentationPluginsBootstrapper.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'webMvcRequestHandlerProvider' defined in URL [jar:file:/C:/Users/Kyllian/.m2/repository/io/springfox/springfox-spring-web/2.9.2/springfox-spring-web-2.9.2.jar!/springfox/documentation/spring/web/plugins/WebMvcRequestHandlerProvider.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'trickResource' method 
public org.springframework.http.ResponseEntity<java.util.List<fr.esgi.service.dto.TrickDTO>> fr.esgi.web.rest.TrickResource.getAllTricks() throws fr.esgi.exception.HelpAndLearningPlatformException
to {GET /api/tricks}: There is already 'trickResource' bean method
public org.springframework.http.ResponseEntity<java.util.List<fr.esgi.service.dto.TrickDTO>> fr.esgi.web.rest.TrickResource.getAllTricksByUserId(java.lang.Long) throws fr.esgi.exception.HelpAndLearningPlatformException mapped.
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:769)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:218)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1187)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at fr.esgi.BackEndApplication.main(BackEndApplication.java:21)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'webMvcRequestHandlerProvider' defined in URL [jar:file:/C:/Users/Kyllian/.m2/repository/io/springfox/springfox-spring-web/2.9.2/springfox-spring-web-2.9.2.jar!/springfox/documentation/spring/web/plugins/WebMvcRequestHandlerProvider.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'trickResource' method 
public org.springframework.http.ResponseEntity<java.util.List<fr.esgi.service.dto.TrickDTO>> fr.esgi.web.rest.TrickResource.getAllTricks() throws fr.esgi.exception.HelpAndLearningPlatformException
to {GET /api/tricks}: There is already 'trickResource' bean method
public org.springframework.http.ResponseEntity<java.util.List<fr.esgi.service.dto.TrickDTO>> fr.esgi.web.rest.TrickResource.getAllTricksByUserId(java.lang.Long) throws fr.esgi.exception.HelpAndLearningPlatformException mapped.
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:769)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:218)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1187)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1463)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1427)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveMultipleBeans(DefaultListableBeanFactory.java:1318)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1205)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760)
	... 17 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'trickResource' method 
public org.springframework.http.ResponseEntity<java.util.List<fr.esgi.service.dto.TrickDTO>> fr.esgi.web.rest.TrickResource.getAllTricks() throws fr.esgi.exception.HelpAndLearningPlatformException
to {GET /api/tricks}: There is already 'trickResource' bean method
public org.springframework.http.ResponseEntity<java.util.List<fr.esgi.service.dto.TrickDTO>> fr.esgi.web.rest.TrickResource.getAllTricksByUserId(java.lang.Long) throws fr.esgi.exception.HelpAndLearningPlatformException mapped.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1778)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1463)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1427)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveMultipleBeans(DefaultListableBeanFactory.java:1318)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1205)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1167)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760)
	... 34 common frames omitted
Caused by: java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'trickResource' method 
public org.springframework.http.ResponseEntity<java.util.List<fr.esgi.service.dto.TrickDTO>> fr.esgi.web.rest.TrickResource.getAllTricks() throws fr.esgi.exception.HelpAndLearningPlatformException
to {GET /api/tricks}: There is already 'trickResource' bean method
public org.springframework.http.ResponseEntity<java.util.List<fr.esgi.service.dto.TrickDTO>> fr.esgi.web.rest.TrickResource.getAllTricksByUserId(java.lang.Long) throws fr.esgi.exception.HelpAndLearningPlatformException mapped.
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.assertUniqueMethodMapping(AbstractHandlerMethodMapping.java:618)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:586)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.registerHandlerMethod(AbstractHandlerMethodMapping.java:312)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lambda$detectHandlerMethods$1(AbstractHandlerMethodMapping.java:282)
	at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.detectHandlerMethods(AbstractHandlerMethodMapping.java:280)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.processCandidateBean(AbstractHandlerMethodMapping.java:252)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.initHandlerMethods(AbstractHandlerMethodMapping.java:211)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.afterPropertiesSet(AbstractHandlerMethodMapping.java:199)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.afterPropertiesSet(RequestMappingHandlerMapping.java:164)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	... 48 common frames omitted
2019-06-23 17:24:32,933 INFO org.springframework.boot.StartupInfoLogger [main] Starting BackEndApplication on DESKTOP-U7R4BSS with PID 6444 (C:\Users\Kyllian\eclipse-workspace\TripsBack\HelpAndLearningPlatform\back-end\target\classes started by Kyllian in C:\Users\Kyllian\eclipse-workspace\TripsBack\HelpAndLearningPlatform\back-end)
2019-06-23 17:24:32,936 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.1.4.RELEASE, Spring v5.1.6.RELEASE
2019-06-23 17:24:32,936 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: dev
2019-06-23 17:24:34,350 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data repositories in DEFAULT mode.
2019-06-23 17:24:34,513 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 150ms. Found 8 repository interfaces.
2019-06-23 17:24:34,999 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$33d9c0f7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-23 17:24:35,040 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$cc878931] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-23 17:24:35,046 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-23 17:24:35,049 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@2e060819' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-23 17:24:35,054 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$f15c2be3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-23 17:24:35,067 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-23 17:24:35,638 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8080 (http)
2019-06-23 17:24:35,657 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2019-06-23 17:24:35,674 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2019-06-23 17:24:35,675 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.17]
2019-06-23 17:24:35,808 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2019-06-23 17:24:35,810 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 2832 ms
2019-06-23 17:24:36,067 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2019-06-23 17:24:36,211 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2019-06-23 17:24:36,273 INFO org.hibernate.jpa.internal.util.LogHelper [main] HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2019-06-23 17:24:36,360 INFO org.hibernate.Version [main] HHH000412: Hibernate Core {5.3.9.Final}
2019-06-23 17:24:36,366 INFO org.hibernate.cfg.Environment [main] HHH000206: hibernate.properties not found
2019-06-23 17:24:36,513 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [main] HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2019-06-23 17:24:36,687 INFO org.hibernate.dialect.Dialect [main] HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2019-06-23 17:24:37,759 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Initialized JPA EntityManagerFactory for persistence unit 'default'
2019-06-23 17:24:38,433 INFO org.hibernate.hql.internal.QueryTranslatorFactoryInitiator [main] HHH000397: Using ASTQueryTranslatorFactory
2019-06-23 17:24:39,120 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [main] Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2019-06-23 17:24:39,508 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: Ant [pattern='/**', OPTIONS], []
2019-06-23 17:24:39,510 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: Ant [pattern='/test/**'], []
2019-06-23 17:24:39,541 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3faa55, org.springframework.security.web.context.SecurityContextPersistenceFilter@783f5f71, org.springframework.security.web.header.HeaderWriterFilter@594c66c3, org.springframework.security.web.authentication.logout.LogoutFilter@757c685d, fr.esgi.config.CorsFilter@61bfc9bf, fr.esgi.security.jwt.JWTFilter@1ab502f6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@66fff42f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@76c587ce, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2a8e30e3, org.springframework.security.web.session.SessionManagementFilter@63b0b3dd, org.springframework.security.web.access.ExceptionTranslationFilter@b87ea8b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6e1ad658]
2019-06-23 17:24:39,701 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2019-06-23 17:24:39,964 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Context refreshed
2019-06-23 17:24:39,987 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Found 1 custom documentation plugin(s)
2019-06-23 17:24:40,020 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [main] Scanning for api listing references
2019-06-23 17:24:40,257 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2019-06-23 17:24:40,266 ERROR org.apache.juli.logging.DirectJDKLog [main] Failed to start component [Connector[HTTP/1.1-8080]]
org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1008)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:226)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:259)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:197)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:311)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:164)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:552)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at fr.esgi.BackEndApplication.main(BackEndApplication.java:21)
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at org.apache.tomcat.util.net.NioEndpoint.initServerSocket(NioEndpoint.java:236)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.bindWithCleanup(AbstractEndpoint.java:1103)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1189)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:568)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1005)
	... 12 common frames omitted
2019-06-23 17:24:40,273 INFO org.apache.juli.logging.DirectJDKLog [main] Pausing ProtocolHandler ["http-nio-8080"]
2019-06-23 17:24:40,273 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping service [Tomcat]
2019-06-23 17:24:40,277 INFO org.apache.juli.logging.DirectJDKLog [main] The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
2019-06-23 17:24:40,278 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping ProtocolHandler ["http-nio-8080"]
2019-06-23 17:24:40,279 INFO org.apache.juli.logging.DirectJDKLog [main] Destroying ProtocolHandler ["http-nio-8080"]
2019-06-23 17:24:40,283 INFO org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener [main] 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-06-23 17:24:40,284 ERROR org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter [main] 

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 8080 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 8080, or configure this application to listen on another port.

2019-06-23 17:24:40,288 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Shutting down ExecutorService 'applicationTaskExecutor'
2019-06-23 17:24:40,297 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Closing JPA EntityManagerFactory for persistence unit 'default'
2019-06-23 17:24:40,298 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown initiated...
2019-06-23 17:24:40,304 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown completed.
2019-06-23 17:26:11,307 INFO org.springframework.boot.StartupInfoLogger [main] Starting BackEndApplication on DESKTOP-U7R4BSS with PID 3504 (C:\Users\Kyllian\eclipse-workspace\TripsBack\HelpAndLearningPlatform\back-end\target\classes started by Kyllian in C:\Users\Kyllian\eclipse-workspace\TripsBack\HelpAndLearningPlatform\back-end)
2019-06-23 17:26:11,310 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.1.4.RELEASE, Spring v5.1.6.RELEASE
2019-06-23 17:26:11,311 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: dev
2019-06-23 17:26:12,534 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data repositories in DEFAULT mode.
2019-06-23 17:26:12,702 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 156ms. Found 8 repository interfaces.
2019-06-23 17:26:13,239 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a7f3771e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-23 17:26:13,292 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$40a13f58] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-23 17:26:13,303 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-23 17:26:13,308 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@1b9776f5' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-23 17:26:13,312 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$6575e20a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-23 17:26:13,318 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-23 17:26:14,193 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8080 (http)
2019-06-23 17:26:14,219 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2019-06-23 17:26:14,239 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2019-06-23 17:26:14,240 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.17]
2019-06-23 17:26:14,429 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2019-06-23 17:26:14,430 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 3062 ms
2019-06-23 17:26:14,850 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2019-06-23 17:26:15,009 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2019-06-23 17:26:15,070 INFO org.hibernate.jpa.internal.util.LogHelper [main] HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2019-06-23 17:26:15,175 INFO org.hibernate.Version [main] HHH000412: Hibernate Core {5.3.9.Final}
2019-06-23 17:26:15,176 INFO org.hibernate.cfg.Environment [main] HHH000206: hibernate.properties not found
2019-06-23 17:26:15,312 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [main] HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2019-06-23 17:26:15,481 INFO org.hibernate.dialect.Dialect [main] HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2019-06-23 17:26:16,595 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Initialized JPA EntityManagerFactory for persistence unit 'default'
2019-06-23 17:26:17,626 INFO org.hibernate.hql.internal.QueryTranslatorFactoryInitiator [main] HHH000397: Using ASTQueryTranslatorFactory
2019-06-23 17:26:18,589 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [main] Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2019-06-23 17:26:19,006 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: Ant [pattern='/**', OPTIONS], []
2019-06-23 17:26:19,007 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: Ant [pattern='/test/**'], []
2019-06-23 17:26:19,045 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1614499b, org.springframework.security.web.context.SecurityContextPersistenceFilter@45b6c666, org.springframework.security.web.header.HeaderWriterFilter@26291192, org.springframework.security.web.authentication.logout.LogoutFilter@7526bb18, fr.esgi.config.CorsFilter@3f50b680, fr.esgi.security.jwt.JWTFilter@1468fc85, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7fc56d61, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6ba08a09, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@47f39279, org.springframework.security.web.session.SessionManagementFilter@78bce1c4, org.springframework.security.web.access.ExceptionTranslationFilter@2914a328, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@632dc41]
2019-06-23 17:26:19,323 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2019-06-23 17:26:19,722 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Context refreshed
2019-06-23 17:26:19,747 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Found 1 custom documentation plugin(s)
2019-06-23 17:26:19,782 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [main] Scanning for api listing references
2019-06-23 17:26:20,032 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2019-06-23 17:26:20,043 ERROR org.apache.juli.logging.DirectJDKLog [main] Failed to start component [Connector[HTTP/1.1-8080]]
org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1008)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:226)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:259)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:197)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:311)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:164)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:552)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at fr.esgi.BackEndApplication.main(BackEndApplication.java:21)
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at org.apache.tomcat.util.net.NioEndpoint.initServerSocket(NioEndpoint.java:236)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.bindWithCleanup(AbstractEndpoint.java:1103)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1189)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:568)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1005)
	... 12 common frames omitted
2019-06-23 17:26:20,048 INFO org.apache.juli.logging.DirectJDKLog [main] Pausing ProtocolHandler ["http-nio-8080"]
2019-06-23 17:26:20,049 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping service [Tomcat]
2019-06-23 17:26:20,052 INFO org.apache.juli.logging.DirectJDKLog [main] The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
2019-06-23 17:26:20,052 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping ProtocolHandler ["http-nio-8080"]
2019-06-23 17:26:20,053 INFO org.apache.juli.logging.DirectJDKLog [main] Destroying ProtocolHandler ["http-nio-8080"]
2019-06-23 17:26:20,057 INFO org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener [main] 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-06-23 17:26:20,059 ERROR org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter [main] 

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 8080 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 8080, or configure this application to listen on another port.

2019-06-23 17:26:20,062 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Shutting down ExecutorService 'applicationTaskExecutor'
2019-06-23 17:26:20,071 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Closing JPA EntityManagerFactory for persistence unit 'default'
2019-06-23 17:26:20,073 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown initiated...
2019-06-23 17:26:20,082 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown completed.
2019-06-23 17:29:47,521 INFO org.springframework.boot.StartupInfoLogger [main] Starting BackEndApplication on DESKTOP-U7R4BSS with PID 8556 (C:\Users\Kyllian\eclipse-workspace\TripsBack\HelpAndLearningPlatform\back-end\target\classes started by Kyllian in C:\Users\Kyllian\eclipse-workspace\TripsBack\HelpAndLearningPlatform\back-end)
2019-06-23 17:29:47,523 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.1.4.RELEASE, Spring v5.1.6.RELEASE
2019-06-23 17:29:47,523 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: dev
2019-06-23 17:29:48,689 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data repositories in DEFAULT mode.
2019-06-23 17:29:48,825 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 125ms. Found 8 repository interfaces.
2019-06-23 17:29:49,260 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$fc6e61a9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-23 17:29:49,300 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$951c29e3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-23 17:29:49,306 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-23 17:29:49,309 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@7173ae5b' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-23 17:29:49,313 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$b9f0cc95] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-23 17:29:49,319 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-23 17:29:49,881 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8080 (http)
2019-06-23 17:29:49,899 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2019-06-23 17:29:49,911 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2019-06-23 17:29:49,911 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.17]
2019-06-23 17:29:50,040 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2019-06-23 17:29:50,041 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 2467 ms
2019-06-23 17:29:50,275 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2019-06-23 17:29:50,431 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2019-06-23 17:29:50,499 INFO org.hibernate.jpa.internal.util.LogHelper [main] HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2019-06-23 17:29:50,572 INFO org.hibernate.Version [main] HHH000412: Hibernate Core {5.3.9.Final}
2019-06-23 17:29:50,574 INFO org.hibernate.cfg.Environment [main] HHH000206: hibernate.properties not found
2019-06-23 17:29:50,711 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [main] HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2019-06-23 17:29:50,898 INFO org.hibernate.dialect.Dialect [main] HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2019-06-23 17:29:52,055 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Initialized JPA EntityManagerFactory for persistence unit 'default'
2019-06-23 17:29:52,792 INFO org.hibernate.hql.internal.QueryTranslatorFactoryInitiator [main] HHH000397: Using ASTQueryTranslatorFactory
2019-06-23 17:29:53,518 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [main] Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2019-06-23 17:29:53,913 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: Ant [pattern='/**', OPTIONS], []
2019-06-23 17:29:53,914 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: Ant [pattern='/test/**'], []
2019-06-23 17:29:53,947 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@58486deb, org.springframework.security.web.context.SecurityContextPersistenceFilter@538a90a5, org.springframework.security.web.header.HeaderWriterFilter@6074d638, org.springframework.security.web.authentication.logout.LogoutFilter@486dd616, fr.esgi.config.CorsFilter@57cb70be, fr.esgi.security.jwt.JWTFilter@4e933cf1, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@18f27a81, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@30bf881e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@729a9c3d, org.springframework.security.web.session.SessionManagementFilter@e5c52fa, org.springframework.security.web.access.ExceptionTranslationFilter@7fc56d61, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@f9cd1e6]
2019-06-23 17:29:54,150 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2019-06-23 17:29:54,413 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Context refreshed
2019-06-23 17:29:54,439 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Found 1 custom documentation plugin(s)
2019-06-23 17:29:54,484 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [main] Scanning for api listing references
2019-06-23 17:29:54,794 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2019-06-23 17:29:54,816 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8080 (http) with context path ''
2019-06-23 17:29:54,819 INFO org.springframework.boot.StartupInfoLogger [main] Started BackEndApplication in 7.76 seconds (JVM running for 8.232)
2019-06-23 17:29:54,824 INFO fr.esgi.BackEndApplication [main] 
----------------------------------------------------------
	Application 'helpAndLearningPlatform' is running! Access URLs:
	Local: 		http://localhost:8080
	External: 	http://169.254.76.241:8080	Profile(s): 	[dev]
----------------------------------------------------------
2019-06-23 17:30:08,715 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-06-23 17:30:08,715 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Initializing Servlet 'dispatcherServlet'
2019-06-23 17:30:08,730 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Completed initialization in 14 ms
2019-06-23 17:32:53,007 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-10] Authenticating geogeo
2019-06-23 17:32:53,253 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-10] Request to find user by username: geogeo
2019-06-23 17:32:53,294 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-1] Authenticating geogeo
2019-06-23 17:32:53,376 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-1] Request to find user by username: geogeo
2019-06-23 17:33:09,858 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-2] Authenticating geogeo
2019-06-23 17:33:09,930 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-2] Request to find user by username: geogeo
2019-06-23 17:33:09,953 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-7] Authenticating geogeo
2019-06-23 17:33:10,022 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-7] Request to find user by username: geogeo
2019-06-23 17:34:04,385 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-8] Authenticating geogeo
2019-06-23 17:34:04,454 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-8] Request to find user by username: geogeo
2019-06-23 17:34:04,481 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-10] Authenticating geogeo
2019-06-23 17:34:04,550 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-10] Request to find user by username: geogeo
2019-06-23 17:34:36,016 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-5] REST request to find all tricks by user: 7
2019-06-23 17:34:36,023 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-5] Request to get all tricks by userId: 7
2019-06-23 17:41:45,842 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-8] Authenticating geogeo
2019-06-23 17:41:45,911 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-8] Request to find user by username: geogeo
2019-06-23 17:41:45,936 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-9] Authenticating geogeo
2019-06-23 17:41:46,003 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-9] Request to find user by username: geogeo
2019-06-23 17:42:10,880 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-6] Authenticating geogeo
2019-06-23 17:42:10,952 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-6] Request to find user by username: geogeo
2019-06-23 17:42:10,978 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-1] Authenticating geogeo
2019-06-23 17:42:11,043 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-1] Request to find user by username: geogeo
2019-06-23 17:42:30,754 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-7] Authenticating geogeo
2019-06-23 17:42:30,823 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-7] Request to find user by username: geogeo
2019-06-23 17:42:30,846 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-8] Authenticating geogeo
2019-06-23 17:42:30,912 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-8] Request to find user by username: geogeo
2019-06-23 17:43:59,623 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-10] Authenticating geogeo
2019-06-23 17:43:59,697 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-10] Request to find user by username: geogeo
2019-06-23 17:43:59,720 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-1] Authenticating geogeo
2019-06-23 17:43:59,786 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-1] Request to find user by username: geogeo
2019-06-23 17:44:23,340 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-5] Authenticating geogeo
2019-06-23 17:44:23,410 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-5] Request to find user by username: geogeo
2019-06-23 17:44:23,434 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-7] Authenticating geogeo
2019-06-23 17:44:23,501 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-7] Request to find user by username: geogeo
2019-06-23 17:44:48,769 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-9] Authenticating geogeo
2019-06-23 17:44:48,838 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-9] Request to find user by username: geogeo
2019-06-23 17:44:48,862 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-6] Authenticating geogeo
2019-06-23 17:44:48,926 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-6] Request to find user by username: geogeo
2019-06-23 17:45:21,835 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-5] Authenticating geogeo
2019-06-23 17:45:21,902 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-5] Request to find user by username: geogeo
2019-06-23 17:45:21,924 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-7] Authenticating geogeo
2019-06-23 17:45:21,989 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-7] Request to find user by username: geogeo
2019-06-23 17:46:28,928 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-9] Authenticating geogeo
2019-06-23 17:46:28,995 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-9] Request to find user by username: geogeo
2019-06-23 17:46:29,020 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-10] Authenticating geogeo
2019-06-23 17:46:29,091 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-10] Request to find user by username: geogeo
2019-06-23 17:47:10,613 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-3] Authenticating geogeo
2019-06-23 17:47:10,681 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-3] Request to find user by username: geogeo
2019-06-23 18:02:22,763 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-8] Authenticating geogeo
2019-06-23 18:02:22,839 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-8] Request to find user by username: geogeo
2019-06-23 18:02:27,101 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-6] Authenticating geogeo
2019-06-23 18:02:27,168 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-6] Request to find user by username: geogeo
2019-06-23 18:03:07,845 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-2] Authenticating geogeo
2019-06-23 18:03:07,932 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-2] Request to find user by username: geogeo
2019-06-23 18:03:09,687 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-8] Authenticating geogeo
2019-06-23 18:03:09,755 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-8] Request to find user by username: geogeo
2019-06-23 18:04:26,456 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-1] Authenticating geogeo
2019-06-23 18:04:26,540 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-1] Request to find user by username: geogeo
2019-06-23 18:04:26,564 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-5] Authenticating geogeo
2019-06-23 18:04:26,641 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-5] Request to find user by username: geogeo
2019-06-23 18:05:00,996 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-4] Authenticating geogeo
2019-06-23 18:05:01,070 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-4] Request to find user by username: geogeo
2019-06-23 18:05:01,093 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-9] Authenticating geogeo
2019-06-23 18:05:01,163 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-9] Request to find user by username: geogeo
2019-06-23 18:05:01,184 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-6] REST request to find Categories
2019-06-23 18:05:01,197 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-6] Request to get all Categories
2019-06-23 18:06:45,802 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-3] Authenticating geogeo
2019-06-23 18:06:45,879 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-3] Request to find user by username: geogeo
2019-06-23 18:06:45,899 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-2] Authenticating geogeo
2019-06-23 18:06:45,978 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-2] Request to find user by username: geogeo
2019-06-23 18:06:46,006 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-4] REST request to find Categories
2019-06-23 18:06:46,010 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-4] Request to get all Categories
2019-06-23 18:06:52,381 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-9] Authenticating geogeo
2019-06-23 18:06:52,454 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-9] Request to find user by username: geogeo
2019-06-23 18:06:52,478 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-6] Authenticating geogeo
2019-06-23 18:06:52,542 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-6] Request to find user by username: geogeo
2019-06-23 18:06:52,564 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-3] REST request to find Categories
2019-06-23 18:06:52,565 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-3] Request to get all Categories
2019-06-23 18:20:59,862 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-7] Authenticating geogeo
2019-06-23 18:20:59,922 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-7] Request to find user by username: geogeo
2019-06-23 18:20:59,934 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-4] Authenticating geogeo
2019-06-23 18:20:59,993 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-4] Request to find user by username: geogeo
2019-06-23 18:21:00,012 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-8] REST request to find Categories
2019-06-23 18:21:00,014 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-8] Request to get all Categories
2019-06-23 18:21:31,461 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-6] Authenticating geogeo
2019-06-23 18:21:31,531 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-6] Request to find user by username: geogeo
2019-06-23 18:21:31,555 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-1] Authenticating geogeo
2019-06-23 18:21:31,626 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-1] Request to find user by username: geogeo
2019-06-23 18:21:31,650 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-5] REST request to find Categories
2019-06-23 18:21:31,651 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-5] Request to get all Categories
2019-06-23 18:21:40,707 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-7] Authenticating geogeo
2019-06-23 18:21:40,784 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-7] Request to find user by username: geogeo
2019-06-23 18:21:40,799 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-8] Authenticating geogeo
2019-06-23 18:21:40,873 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-8] Request to find user by username: geogeo
2019-06-23 18:21:40,899 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-10] REST request to find Categories
2019-06-23 18:21:40,901 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-10] Request to get all Categories
2019-06-23 18:22:07,425 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-1] Authenticating geogeo
2019-06-23 18:22:07,501 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-1] Request to find user by username: geogeo
2019-06-23 18:22:07,528 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-5] Authenticating geogeo
2019-06-23 18:22:07,603 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-5] Request to find user by username: geogeo
2019-06-23 18:22:07,627 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-2] REST request to find Categories
2019-06-23 18:22:07,628 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-2] Request to get all Categories
2019-06-23 18:23:25,015 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-4] Authenticating geogeo
2019-06-23 18:23:25,097 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-4] Request to find user by username: geogeo
2019-06-23 18:23:25,127 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-9] REST request to save a trick: TrickDTO [id=null, wording=test, description=banane, content=steak, categoryId=1, ownUserId=7, creationDate=null, viewNumber=null]
2019-06-23 18:23:25,128 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-9] Request to save a trick: TrickDTO [id=null, wording=test, description=banane, content=steak, categoryId=1, ownUserId=7, creationDate=null, viewNumber=null]
2019-06-23 18:23:25,156 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-6] Authenticating geogeo
2019-06-23 18:23:25,228 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-6] Request to find user by username: geogeo
2019-06-23 18:23:25,253 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-3] Authenticating geogeo
2019-06-23 18:23:25,325 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-3] Request to find user by username: geogeo
2019-06-23 18:23:25,356 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-2] REST request to find Categories
2019-06-23 18:23:25,358 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-2] Request to get all Categories
2019-06-23 18:23:26,846 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-4] Authenticating geogeo
2019-06-23 18:23:26,945 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-4] Request to find user by username: geogeo
2019-06-23 18:23:26,960 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-9] REST request to save a trick: TrickDTO [id=null, wording=test, description=banane, content=steak, categoryId=1, ownUserId=7, creationDate=null, viewNumber=null]
2019-06-23 18:23:26,963 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-9] Request to save a trick: TrickDTO [id=null, wording=test, description=banane, content=steak, categoryId=1, ownUserId=7, creationDate=null, viewNumber=null]
2019-06-23 18:23:26,995 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-6] Authenticating geogeo
2019-06-23 18:23:27,076 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-6] Request to find user by username: geogeo
2019-06-23 18:23:27,102 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-3] Authenticating geogeo
2019-06-23 18:23:27,185 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-3] Request to find user by username: geogeo
2019-06-23 18:23:27,211 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-5] REST request to find Categories
2019-06-23 18:23:27,212 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-5] Request to get all Categories
2019-06-23 18:23:40,531 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-7] Authenticating geogeo
2019-06-23 18:23:40,629 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-7] Request to find user by username: geogeo
2019-06-23 18:23:40,646 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-8] REST request to save a trick: TrickDTO [id=null, wording=banane, description=truc, content=bidule, categoryId=2, ownUserId=7, creationDate=null, viewNumber=null]
2019-06-23 18:23:40,646 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-8] Request to save a trick: TrickDTO [id=null, wording=banane, description=truc, content=bidule, categoryId=2, ownUserId=7, creationDate=null, viewNumber=null]
2019-06-23 18:23:40,674 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-9] Authenticating geogeo
2019-06-23 18:23:40,759 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-9] Request to find user by username: geogeo
2019-06-23 18:23:40,789 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-6] Authenticating geogeo
2019-06-23 18:23:40,876 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-6] Request to find user by username: geogeo
2019-06-23 18:23:40,906 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-3] REST request to find Categories
2019-06-23 18:23:40,908 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-3] Request to get all Categories
2019-06-23 18:26:33,328 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-2] Authenticating geogeo
2019-06-23 18:26:33,404 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-2] Request to find user by username: geogeo
2019-06-23 18:26:33,425 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-4] Authenticating geogeo
2019-06-23 18:26:33,487 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-4] Request to find user by username: geogeo
2019-06-23 18:27:37,143 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-10] Authenticating geogeo
2019-06-23 18:27:37,229 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-10] Request to find user by username: geogeo
2019-06-23 18:27:37,246 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-1] Authenticating geogeo
2019-06-23 18:27:37,321 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-1] Request to find user by username: geogeo
2019-06-23 18:28:46,704 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-2] Authenticating geogeo
2019-06-23 18:28:46,765 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-2] Request to find user by username: geogeo
2019-06-23 18:28:46,783 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-4] Authenticating geogeo
2019-06-23 18:28:46,838 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-4] Request to find user by username: geogeo
2019-06-23 18:32:36,418 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-10] Authenticating geogeo
2019-06-23 18:32:36,492 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-10] Request to find user by username: geogeo
2019-06-23 18:32:36,515 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-6] Authenticating geogeo
2019-06-23 18:32:36,581 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-6] Request to find user by username: geogeo
2019-06-23 18:34:35,897 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-5] Authenticating geogeo
2019-06-23 18:34:35,947 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-5] Request to find user by username: geogeo
2019-06-23 18:34:38,960 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-7] Authenticating geogeo
2019-06-23 18:34:39,009 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-7] Request to find user by username: geogeo
2019-06-23 18:34:39,023 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-8] Authenticating geogeo
2019-06-23 18:34:39,072 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-8] Request to find user by username: geogeo
2019-06-23 18:34:39,088 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-9] REST request to find Categories
2019-06-23 18:34:39,090 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-9] Request to get all Categories
2019-06-23 18:34:45,808 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-6] Authenticating geogeo
2019-06-23 18:34:45,853 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-6] Request to find user by username: geogeo
2019-06-23 18:34:45,868 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-3] Authenticating geogeo
2019-06-23 18:34:45,913 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-3] Request to find user by username: geogeo
2019-06-23 18:34:46,404 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-7] Authenticating geogeo
2019-06-23 18:34:46,446 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-7] Request to find user by username: geogeo
2019-06-23 18:34:46,453 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-8] Authenticating geogeo
2019-06-23 18:34:46,498 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-8] Request to find user by username: geogeo
2019-06-23 18:34:46,508 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-10] REST request to find Categories
2019-06-23 18:34:46,508 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-10] Request to get all Categories
2019-06-23 18:34:57,309 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-1] Authenticating geogeo
2019-06-23 18:34:57,364 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-1] Request to find user by username: geogeo
2019-06-23 18:34:57,384 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-5] REST request to save a trick: TrickDTO [id=null, wording=Test final, description=coucou, content=salut les zboobs, categoryId=1, ownUserId=7, creationDate=2019-06-23, viewNumber=0]
2019-06-23 18:34:57,384 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-5] Request to save a trick: TrickDTO [id=null, wording=Test final, description=coucou, content=salut les zboobs, categoryId=1, ownUserId=7, creationDate=2019-06-23, viewNumber=0]
2019-06-23 18:34:57,392 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-7] Authenticating geogeo
2019-06-23 18:34:57,447 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-7] Request to find user by username: geogeo
2019-06-23 18:34:57,463 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-4] Authenticating geogeo
2019-06-23 18:34:57,513 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-4] Request to find user by username: geogeo
2019-06-23 18:34:57,529 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-9] REST request to find Categories
2019-06-23 18:34:57,531 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-9] Request to get all Categories
2019-06-23 18:34:58,429 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-10] Authenticating geogeo
2019-06-23 18:34:58,482 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-10] Request to find user by username: geogeo
2019-06-23 18:34:58,500 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-1] Authenticating geogeo
2019-06-23 18:34:58,550 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-1] Request to find user by username: geogeo
2019-06-23 18:35:54,861 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-5] Authenticating geogeo
2019-06-23 18:35:54,954 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-5] Request to find user by username: geogeo
2019-06-23 18:35:54,983 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-7] Authenticating geogeo
2019-06-23 18:35:55,075 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-7] Request to find user by username: geogeo
2019-06-23 18:36:53,547 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-9] Authenticating geogeo
2019-06-23 18:36:53,624 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-9] Request to find user by username: geogeo
2019-06-23 18:36:53,647 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-6] Authenticating geogeo
2019-06-23 18:36:53,716 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-6] Request to find user by username: geogeo
2019-06-23 18:36:53,729 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-1] REST request to find all tricks by user: 7
2019-06-23 18:36:53,730 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-1] Request to get all tricks by userId: 7
2019-06-23 18:37:15,089 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-5] Authenticating geogeo
2019-06-23 18:37:15,154 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-5] Request to find user by username: geogeo
2019-06-23 18:37:15,173 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-7] Authenticating geogeo
2019-06-23 18:37:15,232 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-7] Request to find user by username: geogeo
2019-06-23 18:37:15,250 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-4] REST request to find all tricks by user: 7
2019-06-23 18:37:15,253 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-4] Request to get all tricks by userId: 7
2019-06-23 18:38:10,369 INFO fr.esgi.security.jwt.TokenProvider [http-nio-8080-exec-9] Expired JWT token.
2019-06-23 18:38:10,373 TRACE fr.esgi.security.jwt.TokenProvider [http-nio-8080-exec-9] Expired JWT token trace: {}
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2019-06-23T18:13:05Z. Current time: 2019-06-23T18:38:10Z, a difference of 1505369 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:385)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:481)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:541)
	at fr.esgi.security.jwt.TokenProvider.validateToken(TokenProvider.java:91)
	at fr.esgi.security.jwt.JWTFilter.doFilter(JWTFilter.java:33)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at fr.esgi.config.CorsFilter.doFilter(CorsFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-06-23 18:38:10,375 INFO fr.esgi.security.jwt.TokenProvider [http-nio-8080-exec-9] Expired JWT token.
2019-06-23 18:38:10,376 TRACE fr.esgi.security.jwt.TokenProvider [http-nio-8080-exec-9] Expired JWT token trace: {}
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2019-06-23T18:13:05Z. Current time: 2019-06-23T18:38:10Z, a difference of 1505375 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:385)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:481)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:541)
	at fr.esgi.security.jwt.TokenProvider.validateToken(TokenProvider.java:91)
	at fr.esgi.security.jwt.JWTFilter.doFilter(JWTFilter.java:33)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at fr.esgi.config.CorsFilter.doFilter(CorsFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-06-23 18:38:31,940 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-10] Authenticating geogeo
2019-06-23 18:38:32,012 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-10] Request to find user by username: geogeo
2019-06-23 18:38:32,038 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-1] Authenticating geogeo
2019-06-23 18:38:32,113 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-1] Request to find user by username: geogeo
2019-06-23 18:38:32,136 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-5] REST request to find all tricks by user: 7
2019-06-23 18:38:32,136 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-5] Request to get all tricks by userId: 7
2019-06-23 18:38:44,077 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-7] REST request to find all tricks by user: 7
2019-06-23 18:38:44,078 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-7] Request to get all tricks by userId: 7
2019-06-23 18:40:02,367 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-8] Authenticating geogeo
2019-06-23 18:40:02,456 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-8] Request to find user by username: geogeo
2019-06-23 18:40:02,470 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-10] Authenticating geogeo
2019-06-23 18:40:02,558 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-10] Request to find user by username: geogeo
2019-06-23 18:40:02,585 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-1] REST request to find Categories
2019-06-23 18:40:02,586 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-1] Request to get all Categories
2019-06-23 18:40:04,714 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-5] Authenticating geogeo
2019-06-23 18:40:04,795 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-5] Request to find user by username: geogeo
2019-06-23 18:40:04,815 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-7] Authenticating geogeo
2019-06-23 18:40:04,897 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-7] Request to find user by username: geogeo
2019-06-23 18:40:04,922 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-8] REST request to find all tricks by user: 7
2019-06-23 18:40:04,924 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-8] Request to get all tricks by userId: 7
2019-06-23 18:40:36,436 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-9] Authenticating geogeo
2019-06-23 18:40:36,499 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-9] Request to find user by username: geogeo
2019-06-23 18:40:36,514 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-6] Authenticating geogeo
2019-06-23 18:40:36,578 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-6] Request to find user by username: geogeo
2019-06-23 18:40:36,588 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-1] REST request to find all tricks by user: 7
2019-06-23 18:40:36,589 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-1] Request to get all tricks by userId: 7
2019-06-23 18:40:51,965 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-5] Authenticating geogeo
2019-06-23 18:40:52,015 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-5] Request to find user by username: geogeo
2019-06-23 18:40:52,031 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-2] Authenticating geogeo
2019-06-23 18:40:52,079 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-2] Request to find user by username: geogeo
2019-06-23 18:40:52,087 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-4] REST request to find all tricks by user: 7
2019-06-23 18:40:52,088 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-4] Request to get all tricks by userId: 7
2019-06-23 19:27:39,413 INFO fr.esgi.security.jwt.TokenProvider [http-nio-8080-exec-9] Expired JWT token.
2019-06-23 19:27:39,413 TRACE fr.esgi.security.jwt.TokenProvider [http-nio-8080-exec-9] Expired JWT token trace: {}
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2019-06-23T18:13:05Z. Current time: 2019-06-23T19:27:39Z, a difference of 4474412 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:385)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:481)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:541)
	at fr.esgi.security.jwt.TokenProvider.validateToken(TokenProvider.java:91)
	at fr.esgi.security.jwt.JWTFilter.doFilter(JWTFilter.java:33)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at fr.esgi.config.CorsFilter.doFilter(CorsFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-06-23 19:27:39,418 INFO fr.esgi.security.jwt.TokenProvider [http-nio-8080-exec-9] Expired JWT token.
2019-06-23 19:27:39,422 TRACE fr.esgi.security.jwt.TokenProvider [http-nio-8080-exec-9] Expired JWT token trace: {}
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2019-06-23T18:13:05Z. Current time: 2019-06-23T19:27:39Z, a difference of 4474418 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:385)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:481)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:541)
	at fr.esgi.security.jwt.TokenProvider.validateToken(TokenProvider.java:91)
	at fr.esgi.security.jwt.JWTFilter.doFilter(JWTFilter.java:33)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at fr.esgi.config.CorsFilter.doFilter(CorsFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-06-23 20:15:50,834 INFO org.springframework.boot.StartupInfoLogger [main] Starting BackEndApplication on DESKTOP-U7R4BSS with PID 9868 (C:\Users\Kyllian\eclipse-workspace\TripsBack\HelpAndLearningPlatform\back-end\target\classes started by Kyllian in C:\Users\Kyllian\eclipse-workspace\TripsBack\HelpAndLearningPlatform\back-end)
2019-06-23 20:15:50,837 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.1.4.RELEASE, Spring v5.1.6.RELEASE
2019-06-23 20:15:50,837 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: dev
2019-06-23 20:15:52,110 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data repositories in DEFAULT mode.
2019-06-23 20:15:52,247 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 128ms. Found 8 repository interfaces.
2019-06-23 20:15:52,733 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c9dc18f3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-23 20:15:52,776 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$6289e12d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-23 20:15:52,782 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-23 20:15:52,785 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@6c518474' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-23 20:15:52,787 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$875e83df] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-23 20:15:52,793 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-23 20:15:53,448 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8080 (http)
2019-06-23 20:15:53,470 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2019-06-23 20:15:53,483 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2019-06-23 20:15:53,483 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.17]
2019-06-23 20:15:53,627 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2019-06-23 20:15:53,630 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 2746 ms
2019-06-23 20:15:53,874 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2019-06-23 20:15:54,039 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2019-06-23 20:15:54,116 INFO org.hibernate.jpa.internal.util.LogHelper [main] HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2019-06-23 20:15:54,215 INFO org.hibernate.Version [main] HHH000412: Hibernate Core {5.3.9.Final}
2019-06-23 20:15:54,217 INFO org.hibernate.cfg.Environment [main] HHH000206: hibernate.properties not found
2019-06-23 20:15:54,355 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [main] HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2019-06-23 20:15:54,554 INFO org.hibernate.dialect.Dialect [main] HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2019-06-23 20:15:55,671 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Initialized JPA EntityManagerFactory for persistence unit 'default'
2019-06-23 20:15:56,412 INFO org.hibernate.hql.internal.QueryTranslatorFactoryInitiator [main] HHH000397: Using ASTQueryTranslatorFactory
2019-06-23 20:15:57,382 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [main] Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2019-06-23 20:15:57,830 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: Ant [pattern='/**', OPTIONS], []
2019-06-23 20:15:57,831 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: Ant [pattern='/test/**'], []
2019-06-23 20:15:57,891 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@31a024ea, org.springframework.security.web.context.SecurityContextPersistenceFilter@40277077, org.springframework.security.web.header.HeaderWriterFilter@7bebad0d, org.springframework.security.web.authentication.logout.LogoutFilter@495bc9e7, fr.esgi.config.CorsFilter@53c6f96d, fr.esgi.security.jwt.JWTFilter@362c48c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2c4eae94, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4c114687, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@62aee901, org.springframework.security.web.session.SessionManagementFilter@48751d8a, org.springframework.security.web.access.ExceptionTranslationFilter@27048db3, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1ce57bbb]
2019-06-23 20:15:58,185 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2019-06-23 20:15:58,536 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Context refreshed
2019-06-23 20:15:58,565 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Found 1 custom documentation plugin(s)
2019-06-23 20:15:58,635 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [main] Scanning for api listing references
2019-06-23 20:15:58,964 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2019-06-23 20:15:58,992 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8080 (http) with context path ''
2019-06-23 20:15:58,995 INFO org.springframework.boot.StartupInfoLogger [main] Started BackEndApplication in 8.624 seconds (JVM running for 9.095)
2019-06-23 20:15:58,999 INFO fr.esgi.BackEndApplication [main] 
----------------------------------------------------------
	Application 'helpAndLearningPlatform' is running! Access URLs:
	Local: 		http://localhost:8080
	External: 	http://169.254.76.241:8080	Profile(s): 	[dev]
----------------------------------------------------------
2019-06-23 20:16:11,221 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-06-23 20:16:11,222 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Initializing Servlet 'dispatcherServlet'
2019-06-23 20:16:11,239 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Completed initialization in 16 ms
2019-06-23 20:16:11,528 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-1] Authenticating geogeo
2019-06-23 20:16:11,791 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-1] Request to find user by username: geogeo
2019-06-23 20:16:11,847 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-2] Authenticating geogeo
2019-06-23 20:16:11,954 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-2] Request to find user by username: geogeo
2019-06-23 20:22:50,542 WARN io.swagger.models.parameters.AbstractSerializableParameter [http-nio-8080-exec-4] Illegal DefaultValue null for parameter type integer
java.lang.NumberFormatException: For input string: ""
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Long.parseLong(Long.java:601)
	at java.lang.Long.valueOf(Long.java:803)
	at io.swagger.models.parameters.AbstractSerializableParameter.getExample(AbstractSerializableParameter.java:412)
	at sun.reflect.GeneratedMethodAccessor157.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:688)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serializeContents(IndexedListSerializer.java:119)
	at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:79)
	at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:18)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.MapSerializer.serializeFields(MapSerializer.java:722)
	at com.fasterxml.jackson.databind.ser.std.MapSerializer.serialize(MapSerializer.java:643)
	at com.fasterxml.jackson.databind.ser.std.MapSerializer.serialize(MapSerializer.java:33)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:480)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:319)
	at com.fasterxml.jackson.databind.ObjectMapper._configAndWriteValue(ObjectMapper.java:3905)
	at com.fasterxml.jackson.databind.ObjectMapper.writeValueAsString(ObjectMapper.java:3219)
	at springfox.documentation.spring.web.json.JsonSerializer.toJson(JsonSerializer.java:38)
	at springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(Swagger2Controller.java:105)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at fr.esgi.config.CorsFilter.doFilter(CorsFilter.java:54)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at fr.esgi.security.jwt.JWTFilter.doFilter(JWTFilter.java:37)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at fr.esgi.config.CorsFilter.doFilter(CorsFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-06-23 20:38:02,995 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-3] REST request to find all tricks by user: 7
2019-06-23 20:38:03,003 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-3] Request to get all tricks by userId: 7
2019-06-23 20:38:39,209 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-4] REST request to find all tricks by user: 7
2019-06-23 20:38:39,212 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-4] Request to get all tricks by userId: 7
2019-06-23 20:38:48,298 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-6] REST request to find all tricks by user: 7
2019-06-23 20:38:48,301 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-6] Request to get all tricks by userId: 7
2019-06-23 20:40:50,364 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-9] Authenticating geogeo
2019-06-23 20:40:50,436 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-9] Request to find user by username: geogeo
2019-06-23 20:40:50,462 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-10] Authenticating geogeo
2019-06-23 20:40:50,530 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-10] Request to find user by username: geogeo
2019-06-23 20:57:46,289 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-5] Authenticating geogeo
2019-06-23 20:57:46,366 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-5] Request to find user by username: geogeo
2019-06-23 20:57:46,394 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-6] Authenticating geogeo
2019-06-23 20:57:46,460 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-6] Request to find user by username: geogeo
2019-06-23 20:58:16,307 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-9] Authenticating geogeo
2019-06-23 20:58:16,378 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-9] Request to find user by username: geogeo
2019-06-23 20:58:16,403 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-7] Authenticating geogeo
2019-06-23 20:58:16,468 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-7] Request to find user by username: geogeo
2019-06-23 20:58:16,484 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-1] REST request to find all tricks by user: 7
2019-06-23 20:58:16,485 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-1] Request to get all tricks by userId: 7
2019-06-23 20:58:45,969 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-3] Authenticating geogeo
2019-06-23 20:58:46,044 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-3] Request to find user by username: geogeo
2019-06-23 20:58:46,070 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-4] Authenticating geogeo
2019-06-23 20:58:46,138 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-4] Request to find user by username: geogeo
2019-06-23 20:58:46,154 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-8] REST request to find all tricks by user: 7
2019-06-23 20:58:46,154 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-8] Request to get all tricks by userId: 7
2019-06-23 20:59:02,583 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-7] Authenticating geogeo
2019-06-23 20:59:02,652 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-7] Request to find user by username: geogeo
2019-06-23 20:59:02,678 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-1] Authenticating geogeo
2019-06-23 20:59:02,744 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-1] Request to find user by username: geogeo
2019-06-23 20:59:02,761 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-3] REST request to find all tricks by user: 7
2019-06-23 20:59:02,762 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-3] Request to get all tricks by userId: 7
2019-06-23 20:59:22,271 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-4] Authenticating geogeo
2019-06-23 20:59:22,342 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-4] Request to find user by username: geogeo
2019-06-23 20:59:22,367 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-8] Authenticating geogeo
2019-06-23 20:59:22,432 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-8] Request to find user by username: geogeo
2019-06-23 20:59:22,447 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-7] REST request to find all tricks by user: 7
2019-06-23 20:59:22,448 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-7] Request to get all tricks by userId: 7
2019-06-23 21:00:05,939 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-1] Authenticating geogeo
2019-06-23 21:00:06,009 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-1] Request to find user by username: geogeo
2019-06-23 21:00:06,022 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-3] Authenticating geogeo
2019-06-23 21:00:06,087 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-3] Request to find user by username: geogeo
2019-06-23 21:00:06,113 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-4] REST request to find all tricks by user: 7
2019-06-23 21:00:06,114 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-4] Request to get all tricks by userId: 7
2019-06-23 21:01:04,183 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-8] Authenticating geogeo
2019-06-23 21:01:04,255 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-8] Request to find user by username: geogeo
2019-06-23 21:01:04,278 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-7] Authenticating geogeo
2019-06-23 21:01:04,342 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-7] Request to find user by username: geogeo
2019-06-23 21:01:04,370 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-1] REST request to find all tricks by user: 7
2019-06-23 21:01:04,371 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-1] Request to get all tricks by userId: 7
2019-06-23 21:02:48,613 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-3] Authenticating geogeo
2019-06-23 21:02:48,683 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-3] Request to find user by username: geogeo
2019-06-23 21:02:48,697 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-4] Authenticating geogeo
2019-06-23 21:02:48,768 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-4] Request to find user by username: geogeo
2019-06-23 21:02:48,796 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-8] REST request to find all tricks by user: 7
2019-06-23 21:02:48,797 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-8] Request to get all tricks by userId: 7
2019-06-23 21:04:31,849 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-10] Authenticating geogeo
2019-06-23 21:04:31,921 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-10] Request to find user by username: geogeo
2019-06-23 21:04:31,944 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-1] Authenticating geogeo
2019-06-23 21:04:32,008 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-1] Request to find user by username: geogeo
2019-06-23 21:04:32,020 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-2] REST request to find all tricks by user: 7
2019-06-23 21:04:32,022 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-2] Request to get all tricks by userId: 7
2019-06-23 21:04:33,442 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-4] Authenticating geogeo
2019-06-23 21:04:33,513 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-4] Request to find user by username: geogeo
2019-06-23 21:04:33,529 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-6] Authenticating geogeo
2019-06-23 21:04:33,595 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-6] Request to find user by username: geogeo
2019-06-23 21:04:33,608 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-9] REST request to find Categories
2019-06-23 21:04:33,618 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-9] Request to get all Categories
2019-06-23 21:05:11,107 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-7] Authenticating geogeo
2019-06-23 21:05:11,182 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-7] Request to find user by username: geogeo
2019-06-23 21:05:11,210 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-1] REST request to find  trick by id: 6
2019-06-23 21:05:11,211 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-1] Request to get trick by id: 6
2019-06-23 21:05:11,232 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-3] Authenticating geogeo
2019-06-23 21:05:11,307 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-3] Request to find user by username: geogeo
2019-06-23 21:05:11,328 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-4] Authenticating geogeo
2019-06-23 21:05:11,415 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-4] Request to find user by username: geogeo
2019-06-23 21:05:11,443 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-8] REST request to find Categories
2019-06-23 21:05:11,445 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-8] Request to get all Categories
2019-06-23 21:10:57,468 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-7] Authenticating geogeo
2019-06-23 21:10:57,536 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-7] Request to find user by username: geogeo
2019-06-23 21:10:57,558 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-1] REST request to find  trick by id: 6
2019-06-23 21:10:57,560 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-1] Request to get trick by id: 6
2019-06-23 21:10:57,581 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-2] Authenticating geogeo
2019-06-23 21:10:57,646 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-2] Request to find user by username: geogeo
2019-06-23 21:10:57,668 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-5] Authenticating geogeo
2019-06-23 21:10:57,733 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-5] Request to find user by username: geogeo
2019-06-23 21:10:57,754 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-6] REST request to find Categories
2019-06-23 21:10:57,757 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-6] Request to get all Categories
2019-06-23 21:10:59,694 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-9] Authenticating geogeo
2019-06-23 21:10:59,761 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-9] Request to find user by username: geogeo
2019-06-23 21:10:59,783 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-10] REST request to find  trick by id: 6
2019-06-23 21:10:59,784 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-10] Request to get trick by id: 6
2019-06-23 21:10:59,805 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-2] Authenticating geogeo
2019-06-23 21:10:59,870 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-2] Request to find user by username: geogeo
2019-06-23 21:10:59,897 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-3] REST request to update a trick: TrickDTO [id=6, wording=test, description=banane, content=steak, categoryId=1, ownUserId=null, creationDate=null, viewNumber=null]
2019-06-23 21:10:59,898 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-3] Request to update a trick: TrickDTO [id=6, wording=test, description=banane, content=steak, categoryId=1, ownUserId=null, creationDate=null, viewNumber=null]
2019-06-23 21:10:59,910 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-3] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessApiUsageException: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : fr.esgi.domain.Trick.ownUser -> fr.esgi.domain.User; nested exception is java.lang.IllegalStateException: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : fr.esgi.domain.Trick.ownUser -> fr.esgi.domain.User] with root cause
org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : fr.esgi.domain.Trick.ownUser -> fr.esgi.domain.User
	at org.hibernate.engine.spi.CascadingActions$8.noCascade(CascadingActions.java:380)
	at org.hibernate.engine.internal.Cascade.cascade(Cascade.java:165)
	at org.hibernate.event.internal.AbstractFlushingEventListener.cascadeOnFlush(AbstractFlushingEventListener.java:159)
	at org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:150)
	at org.hibernate.event.internal.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:83)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:38)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1453)
	at org.hibernate.internal.SessionImpl.flush(SessionImpl.java:1439)
	at sun.reflect.GeneratedMethodAccessor240.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:308)
	at com.sun.proxy.$Proxy114.flush(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.flush(SimpleJpaRepository.java:533)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.saveAndFlush(SimpleJpaRepository.java:504)
	at sun.reflect.GeneratedMethodAccessor237.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:359)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:200)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:644)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:608)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$invoke$3(RepositoryFactorySupport.java:595)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:595)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:59)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy124.saveAndFlush(Unknown Source)
	at fr.esgi.service.impl.TrickServiceImpl.update(TrickServiceImpl.java:164)
	at fr.esgi.service.impl.TrickServiceImpl$$FastClassBySpringCGLIB$$8822d9db.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at fr.esgi.service.impl.TrickServiceImpl$$EnhancerBySpringCGLIB$$925761d2.update(<generated>)
	at fr.esgi.web.rest.TrickResource.updateTrick(TrickResource.java:222)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:919)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:663)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at fr.esgi.config.CorsFilter.doFilter(CorsFilter.java:54)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at fr.esgi.security.jwt.JWTFilter.doFilter(JWTFilter.java:37)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at fr.esgi.config.CorsFilter.doFilter(CorsFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-06-23 21:10:59,922 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-5] Authenticating geogeo
2019-06-23 21:10:59,989 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-5] Request to find user by username: geogeo
2019-06-23 21:11:00,010 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-6] Authenticating geogeo
2019-06-23 21:11:00,073 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-6] Request to find user by username: geogeo
2019-06-23 21:11:00,094 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-8] REST request to find Categories
2019-06-23 21:11:00,094 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-8] Request to get all Categories
2019-06-23 21:11:04,653 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-7] Authenticating geogeo
2019-06-23 21:11:04,724 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-7] Request to find user by username: geogeo
2019-06-23 21:11:04,740 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-1] REST request to find  trick by id: 6
2019-06-23 21:11:04,742 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-1] Request to get trick by id: 6
2019-06-23 21:11:04,763 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-2] Authenticating geogeo
2019-06-23 21:11:04,838 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-2] Request to find user by username: geogeo
2019-06-23 21:11:04,860 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-5] REST request to update a trick: TrickDTO [id=6, wording=test, description=banane zozo, content=steak, categoryId=1, ownUserId=null, creationDate=null, viewNumber=null]
2019-06-23 21:11:04,862 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-5] Request to update a trick: TrickDTO [id=6, wording=test, description=banane zozo, content=steak, categoryId=1, ownUserId=null, creationDate=null, viewNumber=null]
2019-06-23 21:11:04,866 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-5] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessApiUsageException: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : fr.esgi.domain.Trick.ownUser -> fr.esgi.domain.User; nested exception is java.lang.IllegalStateException: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : fr.esgi.domain.Trick.ownUser -> fr.esgi.domain.User] with root cause
org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : fr.esgi.domain.Trick.ownUser -> fr.esgi.domain.User
	at org.hibernate.engine.spi.CascadingActions$8.noCascade(CascadingActions.java:380)
	at org.hibernate.engine.internal.Cascade.cascade(Cascade.java:165)
	at org.hibernate.event.internal.AbstractFlushingEventListener.cascadeOnFlush(AbstractFlushingEventListener.java:159)
	at org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:150)
	at org.hibernate.event.internal.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:83)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:38)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1453)
	at org.hibernate.internal.SessionImpl.flush(SessionImpl.java:1439)
	at sun.reflect.GeneratedMethodAccessor240.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:308)
	at com.sun.proxy.$Proxy114.flush(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.flush(SimpleJpaRepository.java:533)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.saveAndFlush(SimpleJpaRepository.java:504)
	at sun.reflect.GeneratedMethodAccessor237.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:359)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:200)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:644)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:608)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$invoke$3(RepositoryFactorySupport.java:595)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:595)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:59)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy124.saveAndFlush(Unknown Source)
	at fr.esgi.service.impl.TrickServiceImpl.update(TrickServiceImpl.java:164)
	at fr.esgi.service.impl.TrickServiceImpl$$FastClassBySpringCGLIB$$8822d9db.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at fr.esgi.service.impl.TrickServiceImpl$$EnhancerBySpringCGLIB$$925761d2.update(<generated>)
	at fr.esgi.web.rest.TrickResource.updateTrick(TrickResource.java:222)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:919)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:663)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at fr.esgi.config.CorsFilter.doFilter(CorsFilter.java:54)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at fr.esgi.security.jwt.JWTFilter.doFilter(JWTFilter.java:37)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at fr.esgi.config.CorsFilter.doFilter(CorsFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-06-23 21:11:04,876 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-4] Authenticating geogeo
2019-06-23 21:11:04,940 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-4] Request to find user by username: geogeo
2019-06-23 21:11:04,961 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-8] Authenticating geogeo
2019-06-23 21:11:05,027 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-8] Request to find user by username: geogeo
2019-06-23 21:11:05,049 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-7] REST request to find Categories
2019-06-23 21:11:05,049 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-7] Request to get all Categories
2019-06-23 21:11:17,904 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-10] Authenticating geogeo
2019-06-23 21:11:17,974 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-10] Request to find user by username: geogeo
2019-06-23 21:11:17,997 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-1] Authenticating geogeo
2019-06-23 21:11:18,061 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-1] Request to find user by username: geogeo
2019-06-23 21:11:18,084 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-3] REST request to find all tricks by user: 7
2019-06-23 21:11:18,085 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-3] Request to get all tricks by userId: 7
2019-06-23 21:11:24,313 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-4] Authenticating geogeo
2019-06-23 21:11:24,380 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-4] Request to find user by username: geogeo
2019-06-23 21:11:24,403 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-8] REST request to find  trick by id: 9
2019-06-23 21:11:24,403 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-8] Request to get trick by id: 9
2019-06-23 21:11:24,426 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-7] Authenticating geogeo
2019-06-23 21:11:24,493 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-7] Request to find user by username: geogeo
2019-06-23 21:11:24,516 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-1] Authenticating geogeo
2019-06-23 21:11:24,579 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-1] Request to find user by username: geogeo
2019-06-23 21:11:24,602 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-3] REST request to find Categories
2019-06-23 21:11:24,603 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-3] Request to get all Categories
2019-06-23 21:11:37,730 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-4] Authenticating geogeo
2019-06-23 21:11:37,798 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-4] Request to find user by username: geogeo
2019-06-23 21:11:37,821 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-8] REST request to find  trick by id: 9
2019-06-23 21:11:37,821 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-8] Request to get trick by id: 9
2019-06-23 21:11:37,844 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-7] Authenticating geogeo
2019-06-23 21:11:37,908 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-7] Request to find user by username: geogeo
2019-06-23 21:11:37,931 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-10] REST request to update a trick: TrickDTO [id=9, wording=Test final, description=coucou, content=salut les zboobs !, categoryId=1, ownUserId=null, creationDate=null, viewNumber=null]
2019-06-23 21:11:37,932 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-10] Request to update a trick: TrickDTO [id=9, wording=Test final, description=coucou, content=salut les zboobs !, categoryId=1, ownUserId=null, creationDate=null, viewNumber=null]
2019-06-23 21:11:37,938 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-10] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessApiUsageException: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : fr.esgi.domain.Trick.ownUser -> fr.esgi.domain.User; nested exception is java.lang.IllegalStateException: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : fr.esgi.domain.Trick.ownUser -> fr.esgi.domain.User] with root cause
org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : fr.esgi.domain.Trick.ownUser -> fr.esgi.domain.User
	at org.hibernate.engine.spi.CascadingActions$8.noCascade(CascadingActions.java:380)
	at org.hibernate.engine.internal.Cascade.cascade(Cascade.java:165)
	at org.hibernate.event.internal.AbstractFlushingEventListener.cascadeOnFlush(AbstractFlushingEventListener.java:159)
	at org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:150)
	at org.hibernate.event.internal.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:83)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:38)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1453)
	at org.hibernate.internal.SessionImpl.flush(SessionImpl.java:1439)
	at sun.reflect.GeneratedMethodAccessor240.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:308)
	at com.sun.proxy.$Proxy114.flush(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.flush(SimpleJpaRepository.java:533)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.saveAndFlush(SimpleJpaRepository.java:504)
	at sun.reflect.GeneratedMethodAccessor237.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:359)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:200)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:644)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:608)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$invoke$3(RepositoryFactorySupport.java:595)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:595)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:59)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy124.saveAndFlush(Unknown Source)
	at fr.esgi.service.impl.TrickServiceImpl.update(TrickServiceImpl.java:164)
	at fr.esgi.service.impl.TrickServiceImpl$$FastClassBySpringCGLIB$$8822d9db.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at fr.esgi.service.impl.TrickServiceImpl$$EnhancerBySpringCGLIB$$925761d2.update(<generated>)
	at fr.esgi.web.rest.TrickResource.updateTrick(TrickResource.java:222)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:919)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:663)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at fr.esgi.config.CorsFilter.doFilter(CorsFilter.java:54)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at fr.esgi.security.jwt.JWTFilter.doFilter(JWTFilter.java:37)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at fr.esgi.config.CorsFilter.doFilter(CorsFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-06-23 21:11:37,960 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-1] Authenticating geogeo
2019-06-23 21:11:38,025 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-1] Request to find user by username: geogeo
2019-06-23 21:11:38,045 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-3] Authenticating geogeo
2019-06-23 21:11:38,123 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-3] Request to find user by username: geogeo
2019-06-23 21:11:38,146 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-4] REST request to find Categories
2019-06-23 21:11:38,147 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-4] Request to get all Categories
2019-06-23 21:11:57,531 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-8] Authenticating geogeo
2019-06-23 21:11:57,597 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-8] Request to find user by username: geogeo
2019-06-23 21:11:57,618 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-7] REST request to find  trick by id: 9
2019-06-23 21:11:57,619 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-7] Request to get trick by id: 9
2019-06-23 21:11:57,632 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-1] Authenticating geogeo
2019-06-23 21:11:57,694 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-1] Request to find user by username: geogeo
2019-06-23 21:11:57,717 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-3] REST request to update a trick: TrickDTO [id=9, wording=Test final, description=coucou, content=salut les zboobs, categoryId=1, ownUserId=null, creationDate=null, viewNumber=null]
2019-06-23 21:11:57,717 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-3] Request to update a trick: TrickDTO [id=9, wording=Test final, description=coucou, content=salut les zboobs, categoryId=1, ownUserId=null, creationDate=null, viewNumber=null]
2019-06-23 21:11:57,721 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-3] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessApiUsageException: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : fr.esgi.domain.Trick.ownUser -> fr.esgi.domain.User; nested exception is java.lang.IllegalStateException: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : fr.esgi.domain.Trick.ownUser -> fr.esgi.domain.User] with root cause
org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : fr.esgi.domain.Trick.ownUser -> fr.esgi.domain.User
	at org.hibernate.engine.spi.CascadingActions$8.noCascade(CascadingActions.java:380)
	at org.hibernate.engine.internal.Cascade.cascade(Cascade.java:165)
	at org.hibernate.event.internal.AbstractFlushingEventListener.cascadeOnFlush(AbstractFlushingEventListener.java:159)
	at org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:150)
	at org.hibernate.event.internal.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:83)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:38)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1453)
	at org.hibernate.internal.SessionImpl.flush(SessionImpl.java:1439)
	at sun.reflect.GeneratedMethodAccessor240.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:308)
	at com.sun.proxy.$Proxy114.flush(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.flush(SimpleJpaRepository.java:533)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.saveAndFlush(SimpleJpaRepository.java:504)
	at sun.reflect.GeneratedMethodAccessor237.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:359)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:200)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:644)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:608)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$invoke$3(RepositoryFactorySupport.java:595)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:595)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:59)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy124.saveAndFlush(Unknown Source)
	at fr.esgi.service.impl.TrickServiceImpl.update(TrickServiceImpl.java:164)
	at fr.esgi.service.impl.TrickServiceImpl$$FastClassBySpringCGLIB$$8822d9db.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at fr.esgi.service.impl.TrickServiceImpl$$EnhancerBySpringCGLIB$$925761d2.update(<generated>)
	at fr.esgi.web.rest.TrickResource.updateTrick(TrickResource.java:222)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:919)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:663)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at fr.esgi.config.CorsFilter.doFilter(CorsFilter.java:54)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at fr.esgi.security.jwt.JWTFilter.doFilter(JWTFilter.java:37)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at fr.esgi.config.CorsFilter.doFilter(CorsFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-06-23 21:11:57,743 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-5] Authenticating geogeo
2019-06-23 21:11:57,806 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-5] Request to find user by username: geogeo
2019-06-23 21:11:57,830 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-6] Authenticating geogeo
2019-06-23 21:11:57,893 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-6] Request to find user by username: geogeo
2019-06-23 21:11:57,917 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-9] REST request to find Categories
2019-06-23 21:11:57,917 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-9] Request to get all Categories
2019-06-23 21:12:02,095 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-10] Authenticating geogeo
2019-06-23 21:12:02,162 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-10] Request to find user by username: geogeo
2019-06-23 21:12:02,174 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-2] REST request to find  trick by id: 9
2019-06-23 21:12:02,174 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-2] Request to get trick by id: 9
2019-06-23 21:12:02,196 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-5] Authenticating geogeo
2019-06-23 21:12:02,257 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-5] Request to find user by username: geogeo
2019-06-23 21:12:02,271 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-6] REST request to update a trick: TrickDTO [id=9, wording=Test final, description=coucou, content=salut les zboobs, categoryId=2, ownUserId=null, creationDate=null, viewNumber=null]
2019-06-23 21:12:02,272 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-6] Request to update a trick: TrickDTO [id=9, wording=Test final, description=coucou, content=salut les zboobs, categoryId=2, ownUserId=null, creationDate=null, viewNumber=null]
2019-06-23 21:12:02,276 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-6] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessApiUsageException: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : fr.esgi.domain.Trick.ownUser -> fr.esgi.domain.User; nested exception is java.lang.IllegalStateException: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : fr.esgi.domain.Trick.ownUser -> fr.esgi.domain.User] with root cause
org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : fr.esgi.domain.Trick.ownUser -> fr.esgi.domain.User
	at org.hibernate.engine.spi.CascadingActions$8.noCascade(CascadingActions.java:380)
	at org.hibernate.engine.internal.Cascade.cascade(Cascade.java:165)
	at org.hibernate.event.internal.AbstractFlushingEventListener.cascadeOnFlush(AbstractFlushingEventListener.java:159)
	at org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:150)
	at org.hibernate.event.internal.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:83)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:38)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1453)
	at org.hibernate.internal.SessionImpl.flush(SessionImpl.java:1439)
	at sun.reflect.GeneratedMethodAccessor240.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:308)
	at com.sun.proxy.$Proxy114.flush(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.flush(SimpleJpaRepository.java:533)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.saveAndFlush(SimpleJpaRepository.java:504)
	at sun.reflect.GeneratedMethodAccessor237.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:359)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:200)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:644)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:608)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$invoke$3(RepositoryFactorySupport.java:595)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:595)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:59)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy124.saveAndFlush(Unknown Source)
	at fr.esgi.service.impl.TrickServiceImpl.update(TrickServiceImpl.java:164)
	at fr.esgi.service.impl.TrickServiceImpl$$FastClassBySpringCGLIB$$8822d9db.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at fr.esgi.service.impl.TrickServiceImpl$$EnhancerBySpringCGLIB$$925761d2.update(<generated>)
	at fr.esgi.web.rest.TrickResource.updateTrick(TrickResource.java:222)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:919)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:663)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at fr.esgi.config.CorsFilter.doFilter(CorsFilter.java:54)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at fr.esgi.security.jwt.JWTFilter.doFilter(JWTFilter.java:37)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at fr.esgi.config.CorsFilter.doFilter(CorsFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-06-23 21:12:02,288 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-8] Authenticating geogeo
2019-06-23 21:12:02,351 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-8] Request to find user by username: geogeo
2019-06-23 21:12:02,372 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-7] Authenticating geogeo
2019-06-23 21:12:02,435 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-7] Request to find user by username: geogeo
2019-06-23 21:12:02,446 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-1] REST request to find Categories
2019-06-23 21:12:02,449 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-1] Request to get all Categories
2019-06-23 21:13:47,154 INFO fr.esgi.security.jwt.TokenProvider [http-nio-8080-exec-3] Expired JWT token.
2019-06-23 21:13:47,155 TRACE fr.esgi.security.jwt.TokenProvider [http-nio-8080-exec-3] Expired JWT token trace: {}
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2019-06-23T20:59:09Z. Current time: 2019-06-23T21:13:47Z, a difference of 878154 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:385)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:481)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:541)
	at fr.esgi.security.jwt.TokenProvider.validateToken(TokenProvider.java:91)
	at fr.esgi.security.jwt.JWTFilter.doFilter(JWTFilter.java:33)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at fr.esgi.config.CorsFilter.doFilter(CorsFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-06-23 21:13:47,158 INFO fr.esgi.security.jwt.TokenProvider [http-nio-8080-exec-3] Expired JWT token.
2019-06-23 21:13:47,159 TRACE fr.esgi.security.jwt.TokenProvider [http-nio-8080-exec-3] Expired JWT token trace: {}
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2019-06-23T20:59:09Z. Current time: 2019-06-23T21:13:47Z, a difference of 878158 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:385)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:481)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:541)
	at fr.esgi.security.jwt.TokenProvider.validateToken(TokenProvider.java:91)
	at fr.esgi.security.jwt.JWTFilter.doFilter(JWTFilter.java:33)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at fr.esgi.config.CorsFilter.doFilter(CorsFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-06-23 21:13:55,688 INFO fr.esgi.security.jwt.TokenProvider [http-nio-8080-exec-5] Expired JWT token.
2019-06-23 21:13:55,691 TRACE fr.esgi.security.jwt.TokenProvider [http-nio-8080-exec-5] Expired JWT token trace: {}
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2019-06-23T20:59:09Z. Current time: 2019-06-23T21:13:55Z, a difference of 886688 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:385)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:481)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:541)
	at fr.esgi.security.jwt.TokenProvider.validateToken(TokenProvider.java:91)
	at fr.esgi.security.jwt.JWTFilter.doFilter(JWTFilter.java:33)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at fr.esgi.config.CorsFilter.doFilter(CorsFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-06-23 21:13:55,694 INFO fr.esgi.security.jwt.TokenProvider [http-nio-8080-exec-5] Expired JWT token.
2019-06-23 21:13:55,694 TRACE fr.esgi.security.jwt.TokenProvider [http-nio-8080-exec-5] Expired JWT token trace: {}
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2019-06-23T20:59:09Z. Current time: 2019-06-23T21:13:55Z, a difference of 886694 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:385)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:481)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:541)
	at fr.esgi.security.jwt.TokenProvider.validateToken(TokenProvider.java:91)
	at fr.esgi.security.jwt.JWTFilter.doFilter(JWTFilter.java:33)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at fr.esgi.config.CorsFilter.doFilter(CorsFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-06-23 21:16:46,785 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-8] Authenticating geogeo
2019-06-23 21:16:46,860 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-8] Request to find user by username: geogeo
2019-06-23 21:16:46,873 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-7] Authenticating geogeo
2019-06-23 21:16:46,940 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-7] Request to find user by username: geogeo
2019-06-23 21:16:46,963 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-1] REST request to find all tricks by user: 7
2019-06-23 21:16:46,964 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-1] Request to get all tricks by userId: 7
2019-06-23 21:16:49,719 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-2] Authenticating geogeo
2019-06-23 21:16:49,787 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-2] Request to find user by username: geogeo
2019-06-23 21:16:49,809 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-5] REST request to find  trick by id: 6
2019-06-23 21:16:49,810 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-5] Request to get trick by id: 6
2019-06-23 21:16:49,833 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-6] Authenticating geogeo
2019-06-23 21:16:49,896 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-6] Request to find user by username: geogeo
2019-06-23 21:16:49,916 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-8] Authenticating geogeo
2019-06-23 21:16:49,979 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-8] Request to find user by username: geogeo
2019-06-23 21:16:50,002 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-7] REST request to find Categories
2019-06-23 21:16:50,003 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-7] Request to get all Categories
2019-06-23 21:16:51,707 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-1] Authenticating geogeo
2019-06-23 21:16:51,774 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-1] Request to find user by username: geogeo
2019-06-23 21:16:51,799 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-3] REST request to find  trick by id: 6
2019-06-23 21:16:51,800 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-3] Request to get trick by id: 6
2019-06-23 21:16:51,819 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-4] Authenticating geogeo
2019-06-23 21:16:51,881 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-4] Request to find user by username: geogeo
2019-06-23 21:16:51,892 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-8] REST request to delete a trick by trickId: 6
2019-06-23 21:16:51,925 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-9] Authenticating geogeo
2019-06-23 21:16:51,989 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-9] Request to find user by username: geogeo
2019-06-23 21:16:52,011 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-10] Authenticating geogeo
2019-06-23 21:16:52,075 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-10] Request to find user by username: geogeo
2019-06-23 21:16:52,095 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-2] REST request to find Categories
2019-06-23 21:16:52,097 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-2] Request to get all Categories
2019-06-23 21:16:53,916 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-5] Authenticating geogeo
2019-06-23 21:16:53,982 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-5] Request to find user by username: geogeo
2019-06-23 21:16:54,005 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-4] Authenticating geogeo
2019-06-23 21:16:54,067 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-4] Request to find user by username: geogeo
2019-06-23 21:16:54,089 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-8] REST request to find all tricks by user: 7
2019-06-23 21:16:54,090 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-8] Request to get all tricks by userId: 7
2019-06-23 21:16:55,514 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-7] Authenticating geogeo
2019-06-23 21:16:55,580 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-7] Request to find user by username: geogeo
2019-06-23 21:16:55,601 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-1] REST request to find  trick by id: 7
2019-06-23 21:16:55,602 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-1] Request to get trick by id: 7
2019-06-23 21:16:55,616 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-3] Authenticating geogeo
2019-06-23 21:16:55,681 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-3] Request to find user by username: geogeo
2019-06-23 21:16:55,691 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-5] Authenticating geogeo
2019-06-23 21:16:55,779 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-5] Request to find user by username: geogeo
2019-06-23 21:16:55,797 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-6] REST request to find Categories
2019-06-23 21:16:55,798 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-6] Request to get all Categories
2019-06-23 21:16:56,519 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-9] Authenticating geogeo
2019-06-23 21:16:56,585 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-9] Request to find user by username: geogeo
2019-06-23 21:16:56,606 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-10] REST request to find  trick by id: 7
2019-06-23 21:16:56,607 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-10] Request to get trick by id: 7
2019-06-23 21:16:56,619 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-2] Authenticating geogeo
2019-06-23 21:16:56,686 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-2] Request to find user by username: geogeo
2019-06-23 21:16:56,699 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-3] REST request to delete a trick by trickId: 7
2019-06-23 21:16:56,719 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-4] Authenticating geogeo
2019-06-23 21:16:56,787 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-4] Request to find user by username: geogeo
2019-06-23 21:16:56,808 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-8] Authenticating geogeo
2019-06-23 21:16:56,872 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-8] Request to find user by username: geogeo
2019-06-23 21:16:56,881 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-9] REST request to find Categories
2019-06-23 21:16:56,883 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-9] Request to get all Categories
2019-06-23 21:16:57,510 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-10] Authenticating geogeo
2019-06-23 21:16:57,574 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-10] Request to find user by username: geogeo
2019-06-23 21:16:57,594 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-1] Authenticating geogeo
2019-06-23 21:16:57,659 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-1] Request to find user by username: geogeo
2019-06-23 21:16:57,671 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-3] REST request to find all tricks by user: 7
2019-06-23 21:16:57,673 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-3] Request to get all tricks by userId: 7
2019-06-23 21:17:15,933 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-4] Authenticating geogeo
2019-06-23 21:17:16,009 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-4] Request to find user by username: geogeo
2019-06-23 21:17:16,022 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-8] REST request to find  trick by id: 8
2019-06-23 21:17:16,024 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-8] Request to get trick by id: 8
2019-06-23 21:17:16,033 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-7] Authenticating geogeo
2019-06-23 21:17:16,095 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-7] Request to find user by username: geogeo
2019-06-23 21:17:16,115 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-10] Authenticating geogeo
2019-06-23 21:17:16,178 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-10] Request to find user by username: geogeo
2019-06-23 21:17:16,199 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-1] REST request to find Categories
2019-06-23 21:17:16,200 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-1] Request to get all Categories
2019-06-23 21:17:17,694 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-3] Authenticating geogeo
2019-06-23 21:17:17,764 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-3] Request to find user by username: geogeo
2019-06-23 21:17:17,785 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-4] REST request to find  trick by id: 8
2019-06-23 21:17:17,787 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-4] Request to get trick by id: 8
2019-06-23 21:17:17,810 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-8] Authenticating geogeo
2019-06-23 21:17:17,874 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-8] Request to find user by username: geogeo
2019-06-23 21:17:17,894 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-7] REST request to delete a trick by trickId: 8
2019-06-23 21:17:17,918 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-1] Authenticating geogeo
2019-06-23 21:17:17,980 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-1] Request to find user by username: geogeo
2019-06-23 21:17:17,999 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-2] Authenticating geogeo
2019-06-23 21:17:18,062 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-2] Request to find user by username: geogeo
2019-06-23 21:17:18,083 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-3] REST request to find Categories
2019-06-23 21:17:18,083 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-3] Request to get all Categories
2019-06-23 21:17:18,124 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-4] Authenticating geogeo
2019-06-23 21:17:18,189 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-4] Request to find user by username: geogeo
2019-06-23 21:17:18,210 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-8] Authenticating geogeo
2019-06-23 21:17:18,271 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-8] Request to find user by username: geogeo
2019-06-23 21:17:18,284 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-7] REST request to find all tricks by user: 7
2019-06-23 21:17:18,284 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-7] Request to get all tricks by userId: 7
2019-06-23 21:17:20,316 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-1] Authenticating geogeo
2019-06-23 21:17:20,384 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-1] Request to find user by username: geogeo
2019-06-23 21:17:20,407 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-3] Authenticating geogeo
2019-06-23 21:17:20,477 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-3] Request to find user by username: geogeo
2019-06-23 21:17:20,501 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-4] REST request to find Categories
2019-06-23 21:17:20,501 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-4] Request to get all Categories
2019-06-23 21:17:37,994 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-8] Authenticating geogeo
2019-06-23 21:17:38,061 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-8] Request to find user by username: geogeo
2019-06-23 21:17:38,085 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-7] REST request to save a trick: TrickDTO [id=null, wording=Zouzou, description=Tavu les zboob, content=Wesh les refrés, categoryId=4, ownUserId=7, creationDate=2019-06-23, viewNumber=0]
2019-06-23 21:17:38,086 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-7] Request to save a trick: TrickDTO [id=null, wording=Zouzou, description=Tavu les zboob, content=Wesh les refrés, categoryId=4, ownUserId=7, creationDate=2019-06-23, viewNumber=0]
2019-06-23 21:17:38,108 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-1] Authenticating geogeo
2019-06-23 21:17:38,172 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-1] Request to find user by username: geogeo
2019-06-23 21:17:38,183 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-3] Authenticating geogeo
2019-06-23 21:17:38,248 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-3] Request to find user by username: geogeo
2019-06-23 21:17:38,270 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-4] REST request to find Categories
2019-06-23 21:17:38,271 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-4] Request to get all Categories
2019-06-23 21:17:40,036 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-8] Authenticating geogeo
2019-06-23 21:17:40,102 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-8] Request to find user by username: geogeo
2019-06-23 21:17:40,113 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-7] Authenticating geogeo
2019-06-23 21:17:40,175 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-7] Request to find user by username: geogeo
2019-06-23 21:17:40,191 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-1] REST request to find all tricks by user: 7
2019-06-23 21:17:40,192 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-1] Request to get all tricks by userId: 7
2019-06-23 21:17:59,160 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-3] Authenticating geogeo
2019-06-23 21:17:59,229 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-3] Request to find user by username: geogeo
2019-06-23 21:17:59,249 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-4] REST request to find  trick by id: 10
2019-06-23 21:17:59,250 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-4] Request to get trick by id: 10
2019-06-23 21:17:59,271 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-8] Authenticating geogeo
2019-06-23 21:17:59,334 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-8] Request to find user by username: geogeo
2019-06-23 21:17:59,355 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-9] Authenticating geogeo
2019-06-23 21:17:59,421 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-9] Request to find user by username: geogeo
2019-06-23 21:17:59,442 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-10] REST request to find Categories
2019-06-23 21:17:59,443 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-10] Request to get all Categories
2019-06-23 21:18:03,242 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-2] Authenticating geogeo
2019-06-23 21:18:03,310 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-2] Request to find user by username: geogeo
2019-06-23 21:18:03,332 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-5] REST request to find  trick by id: 10
2019-06-23 21:18:03,332 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-5] Request to get trick by id: 10
2019-06-23 21:18:03,345 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-6] Authenticating geogeo
2019-06-23 21:18:03,410 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-6] Request to find user by username: geogeo
2019-06-23 21:18:03,432 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-9] REST request to delete a trick by trickId: 10
2019-06-23 21:18:03,457 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-10] Authenticating geogeo
2019-06-23 21:18:03,518 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-10] Request to find user by username: geogeo
2019-06-23 21:18:03,539 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-2] Authenticating geogeo
2019-06-23 21:18:03,602 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-2] Request to find user by username: geogeo
2019-06-23 21:18:03,621 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-3] REST request to find Categories
2019-06-23 21:18:03,623 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-3] Request to get all Categories
2019-06-23 21:18:03,663 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-4] Authenticating geogeo
2019-06-23 21:18:03,728 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-4] Request to find user by username: geogeo
2019-06-23 21:18:03,747 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-8] Authenticating geogeo
2019-06-23 21:18:03,810 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-8] Request to find user by username: geogeo
2019-06-23 21:18:03,830 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-7] REST request to find all tricks by user: 7
2019-06-23 21:18:03,831 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-7] Request to get all tricks by userId: 7
2019-06-23 21:18:03,890 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-1] Authenticating geogeo
2019-06-23 21:18:03,960 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-1] Request to find user by username: geogeo
2019-06-23 21:18:03,980 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-3] REST request to find  trick by id: 10
2019-06-23 21:18:03,982 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-3] Request to get trick by id: 10
2019-06-23 21:18:03,994 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-4] Authenticating geogeo
2019-06-23 21:18:04,057 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-4] Request to find user by username: geogeo
2019-06-23 21:18:04,065 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-8] REST request to delete a trick by trickId: 10
2019-06-23 21:18:04,071 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-8] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.EmptyResultDataAccessException: No class fr.esgi.domain.Trick entity with id 10 exists!] with root cause
org.springframework.dao.EmptyResultDataAccessException: No class fr.esgi.domain.Trick entity with id 10 exists!
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.lambda$deleteById$0(SimpleJpaRepository.java:150)
	at java.util.Optional.orElseThrow(Optional.java:290)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.deleteById(SimpleJpaRepository.java:149)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:359)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:200)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:644)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:608)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$invoke$3(RepositoryFactorySupport.java:595)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:595)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:59)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy124.deleteById(Unknown Source)
	at fr.esgi.service.impl.TrickServiceImpl.delete(TrickServiceImpl.java:217)
	at fr.esgi.service.impl.TrickServiceImpl$$FastClassBySpringCGLIB$$8822d9db.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at fr.esgi.service.impl.TrickServiceImpl$$EnhancerBySpringCGLIB$$925761d2.delete(<generated>)
	at fr.esgi.web.rest.TrickResource.deleteTrick(TrickResource.java:251)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:930)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:666)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at fr.esgi.config.CorsFilter.doFilter(CorsFilter.java:54)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at fr.esgi.security.jwt.JWTFilter.doFilter(JWTFilter.java:37)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at fr.esgi.config.CorsFilter.doFilter(CorsFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-06-23 21:18:04,081 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-9] Authenticating geogeo
2019-06-23 21:18:04,146 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-9] Request to find user by username: geogeo
2019-06-23 21:18:04,167 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-7] Authenticating geogeo
2019-06-23 21:18:04,229 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-7] Request to find user by username: geogeo
2019-06-23 21:18:04,250 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-1] REST request to find Categories
2019-06-23 21:18:04,250 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-1] Request to get all Categories
2019-06-23 21:18:04,287 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-2] Authenticating geogeo
2019-06-23 21:18:04,351 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-2] Request to find user by username: geogeo
2019-06-23 21:18:04,372 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-3] Authenticating geogeo
2019-06-23 21:18:04,457 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-3] Request to find user by username: geogeo
2019-06-23 21:18:04,478 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-4] REST request to find all tricks by user: 7
2019-06-23 21:18:04,478 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-4] Request to get all tricks by userId: 7
2019-06-23 21:18:05,438 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-8] Authenticating geogeo
2019-06-23 21:18:05,505 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-8] Request to find user by username: geogeo
2019-06-23 21:18:05,531 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-7] Authenticating geogeo
2019-06-23 21:18:05,595 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-7] Request to find user by username: geogeo
2019-06-23 21:18:05,615 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-1] REST request to find Categories
2019-06-23 21:18:05,615 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-1] Request to get all Categories
2019-06-23 21:18:26,541 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-3] Authenticating geogeo
2019-06-23 21:18:26,607 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-3] Request to find user by username: geogeo
2019-06-23 21:18:26,628 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-4] REST request to save a trick: TrickDTO [id=null, wording=Titre intéressant, description=Ah ah ah ceci est nul, content=Coucou c'est du contenu, categoryId=3, ownUserId=7, creationDate=2019-06-23, viewNumber=0]
2019-06-23 21:18:26,628 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-4] Request to save a trick: TrickDTO [id=null, wording=Titre intéressant, description=Ah ah ah ceci est nul, content=Coucou c'est du contenu, categoryId=3, ownUserId=7, creationDate=2019-06-23, viewNumber=0]
2019-06-23 21:18:26,652 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-8] Authenticating geogeo
2019-06-23 21:18:26,732 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-8] Request to find user by username: geogeo
2019-06-23 21:18:26,753 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-7] Authenticating geogeo
2019-06-23 21:18:26,814 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-7] Request to find user by username: geogeo
2019-06-23 21:18:26,834 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-1] REST request to find Categories
2019-06-23 21:18:26,835 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-1] Request to get all Categories
2019-06-23 21:18:26,873 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-3] Authenticating geogeo
2019-06-23 21:18:26,935 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-3] Request to find user by username: geogeo
2019-06-23 21:18:26,945 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-5] Authenticating geogeo
2019-06-23 21:18:27,006 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-5] Request to find user by username: geogeo
2019-06-23 21:18:27,027 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-6] REST request to find all tricks by user: 7
2019-06-23 21:18:27,029 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-6] Request to get all tricks by userId: 7
2019-06-23 21:19:59,276 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-9] Authenticating geogeo
2019-06-23 21:19:59,353 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-9] Request to find user by username: geogeo
2019-06-23 21:19:59,374 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-10] Authenticating geogeo
2019-06-23 21:19:59,440 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-10] Request to find user by username: geogeo
2019-06-23 21:19:59,452 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-2] REST request to find all tricks by user: 7
2019-06-23 21:19:59,453 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-2] Request to get all tricks by userId: 7
2019-06-23 21:20:14,506 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-5] Authenticating geogeo
2019-06-23 21:20:14,578 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-5] Request to find user by username: geogeo
2019-06-23 21:20:14,592 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-6] Authenticating geogeo
2019-06-23 21:20:14,657 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-6] Request to find user by username: geogeo
2019-06-23 21:20:14,673 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-9] REST request to find all tricks by user: 7
2019-06-23 21:20:14,675 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-9] Request to get all tricks by userId: 7
2019-06-23 21:20:26,186 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-10] Authenticating geogeo
2019-06-23 21:20:26,268 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-10] Request to find user by username: geogeo
2019-06-23 21:20:26,278 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-2] Authenticating geogeo
2019-06-23 21:20:26,344 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-2] Request to find user by username: geogeo
2019-06-23 21:20:26,357 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-5] REST request to find all tricks by user: 7
2019-06-23 21:20:26,360 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-5] Request to get all tricks by userId: 7
2019-06-23 21:20:46,062 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-6] Authenticating geogeo
2019-06-23 21:20:46,134 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-6] Request to find user by username: geogeo
2019-06-23 21:20:46,153 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-9] REST request to find all tricks by user: 7
2019-06-23 21:20:46,159 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-9] Request to get all tricks by userId: 7
2019-06-23 21:21:12,977 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-10] Authenticating geogeo
2019-06-23 21:21:13,042 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-10] Request to find user by username: geogeo
2019-06-23 21:21:13,064 DEBUG fr.esgi.web.rest.UserResource [http-nio-8080-exec-2] REST request to get user by id
2019-06-23 21:21:13,066 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-2] Request to find user by id: 7
2019-06-23 21:21:19,460 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-5] Authenticating geogeo
2019-06-23 21:21:19,526 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-5] Request to find user by username: geogeo
2019-06-23 21:21:19,549 DEBUG fr.esgi.web.rest.UserResource [http-nio-8080-exec-4] REST request to get user by id
2019-06-23 21:21:19,550 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-4] Request to find user by id: 7
2019-06-23 21:21:21,295 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-8] Authenticating geogeo
2019-06-23 21:21:21,362 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-8] Request to find user by username: geogeo
2019-06-23 21:21:21,377 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-7] REST request to find all tricks by user: 7
2019-06-23 21:21:21,380 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-7] Request to get all tricks by userId: 7
2019-06-23 21:21:23,186 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-1] Authenticating geogeo
2019-06-23 21:21:23,253 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-1] Request to find user by username: geogeo
2019-06-23 21:21:23,286 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-3] REST request to find all tricks by user: 7
2019-06-23 21:21:23,288 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-3] Request to get all tricks by userId: 7
2019-06-23 21:21:26,676 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-5] Authenticating geogeo
2019-06-23 21:21:26,745 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-5] Request to find user by username: geogeo
2019-06-23 21:21:26,760 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-6] REST request to find  trick by id: 9
2019-06-23 21:21:26,761 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-6] Request to get trick by id: 9
2019-06-23 21:21:26,774 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-9] Authenticating geogeo
2019-06-23 21:21:26,840 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-9] Request to find user by username: geogeo
2019-06-23 21:21:26,860 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-10] REST request to find Categories
2019-06-23 21:21:26,861 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-10] Request to get all Categories
2019-06-23 21:21:31,367 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-2] Authenticating geogeo
2019-06-23 21:21:31,435 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-2] Request to find user by username: geogeo
2019-06-23 21:21:31,457 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-5] REST request to find all tricks by user: 7
2019-06-23 21:21:31,458 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-5] Request to get all tricks by userId: 7
2019-06-23 21:22:00,365 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-6] Authenticating geogeo
2019-06-23 21:22:00,428 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-6] Request to find user by username: geogeo
2019-06-23 21:22:00,450 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-9] REST request to find  trick by id: 11
2019-06-23 21:22:00,452 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-9] Request to get trick by id: 11
2019-06-23 21:22:00,474 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-10] Authenticating geogeo
2019-06-23 21:22:00,540 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-10] Request to find user by username: geogeo
2019-06-23 21:22:00,560 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-2] REST request to find Categories
2019-06-23 21:22:00,562 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-2] Request to get all Categories
2019-06-23 21:22:01,988 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-3] Authenticating geogeo
2019-06-23 21:22:02,052 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-3] Request to find user by username: geogeo
2019-06-23 21:22:02,073 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-4] REST request to find  trick by id: 11
2019-06-23 21:22:02,075 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-4] Request to get trick by id: 11
2019-06-23 21:22:02,098 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-8] Authenticating geogeo
2019-06-23 21:22:02,160 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-8] Request to find user by username: geogeo
2019-06-23 21:22:02,179 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-7] REST request to update a trick: TrickDTO [id=11, wording=Titre intéressant, description=Ah ah ah ceci est nul, content=Coucou c'est du contenu, categoryId=1, ownUserId=null, creationDate=null, viewNumber=null]
2019-06-23 21:22:02,181 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-7] Request to update a trick: TrickDTO [id=11, wording=Titre intéressant, description=Ah ah ah ceci est nul, content=Coucou c'est du contenu, categoryId=1, ownUserId=null, creationDate=null, viewNumber=null]
2019-06-23 21:22:02,184 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-7] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessApiUsageException: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : fr.esgi.domain.Trick.ownUser -> fr.esgi.domain.User; nested exception is java.lang.IllegalStateException: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : fr.esgi.domain.Trick.ownUser -> fr.esgi.domain.User] with root cause
org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : fr.esgi.domain.Trick.ownUser -> fr.esgi.domain.User
	at org.hibernate.engine.spi.CascadingActions$8.noCascade(CascadingActions.java:380)
	at org.hibernate.engine.internal.Cascade.cascade(Cascade.java:165)
	at org.hibernate.event.internal.AbstractFlushingEventListener.cascadeOnFlush(AbstractFlushingEventListener.java:159)
	at org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:150)
	at org.hibernate.event.internal.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:83)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:38)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1453)
	at org.hibernate.internal.SessionImpl.flush(SessionImpl.java:1439)
	at sun.reflect.GeneratedMethodAccessor240.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:308)
	at com.sun.proxy.$Proxy114.flush(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.flush(SimpleJpaRepository.java:533)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.saveAndFlush(SimpleJpaRepository.java:504)
	at sun.reflect.GeneratedMethodAccessor237.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:359)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:200)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:644)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:608)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$invoke$3(RepositoryFactorySupport.java:595)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:595)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:59)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy124.saveAndFlush(Unknown Source)
	at fr.esgi.service.impl.TrickServiceImpl.update(TrickServiceImpl.java:164)
	at fr.esgi.service.impl.TrickServiceImpl$$FastClassBySpringCGLIB$$8822d9db.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at fr.esgi.service.impl.TrickServiceImpl$$EnhancerBySpringCGLIB$$925761d2.update(<generated>)
	at fr.esgi.web.rest.TrickResource.updateTrick(TrickResource.java:222)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:919)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:663)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at fr.esgi.config.CorsFilter.doFilter(CorsFilter.java:54)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at fr.esgi.security.jwt.JWTFilter.doFilter(JWTFilter.java:37)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at fr.esgi.config.CorsFilter.doFilter(CorsFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-06-23 21:22:02,204 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-10] Authenticating geogeo
2019-06-23 21:22:02,264 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-10] Request to find user by username: geogeo
2019-06-23 21:22:02,275 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-2] REST request to find Categories
2019-06-23 21:22:02,276 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-2] Request to get all Categories
2019-06-23 21:22:04,907 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-5] Authenticating geogeo
2019-06-23 21:22:04,974 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-5] Request to find user by username: geogeo
2019-06-23 21:22:04,996 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-6] REST request to find all tricks by user: 7
2019-06-23 21:22:04,996 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-6] Request to get all tricks by userId: 7
2019-06-23 21:22:52,736 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-9] Authenticating geogeo
2019-06-23 21:22:52,800 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-9] Request to find user by username: geogeo
2019-06-23 21:22:52,821 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-10] REST request to find  trick by id: 11
2019-06-23 21:22:52,821 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-10] Request to get trick by id: 11
2019-06-23 21:22:52,843 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-2] Authenticating geogeo
2019-06-23 21:22:52,906 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-2] Request to find user by username: geogeo
2019-06-23 21:22:52,917 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-5] REST request to find Categories
2019-06-23 21:22:52,918 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-5] Request to get all Categories
2019-06-23 21:22:54,095 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-6] Authenticating geogeo
2019-06-23 21:22:54,161 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-6] Request to find user by username: geogeo
2019-06-23 21:22:54,183 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-9] REST request to find  trick by id: 11
2019-06-23 21:22:54,184 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-9] Request to get trick by id: 11
2019-06-23 21:22:54,208 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-10] Authenticating geogeo
2019-06-23 21:22:54,271 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-10] Request to find user by username: geogeo
2019-06-23 21:22:54,292 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-2] REST request to find Categories
2019-06-23 21:22:54,293 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-2] Request to get all Categories
2019-06-23 21:22:54,329 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-5] Authenticating geogeo
2019-06-23 21:22:54,393 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-5] Request to find user by username: geogeo
2019-06-23 21:22:54,414 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-6] REST request to find all tricks by user: 7
2019-06-23 21:22:54,415 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-6] Request to get all tricks by userId: 7
2019-06-23 21:22:55,554 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-9] Authenticating geogeo
2019-06-23 21:22:55,618 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-9] Request to find user by username: geogeo
2019-06-23 21:22:55,639 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-10] REST request to find Categories
2019-06-23 21:22:55,640 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-10] Request to get all Categories
2019-06-23 21:23:18,437 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-2] Authenticating geogeo
2019-06-23 21:23:18,506 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-2] Request to find user by username: geogeo
2019-06-23 21:23:18,520 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-5] REST request to find Categories
2019-06-23 21:23:18,521 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-5] Request to get all Categories
2019-06-23 21:23:51,343 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-6] Authenticating geogeo
2019-06-23 21:23:51,407 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-6] Request to find user by username: geogeo
2019-06-23 21:23:51,418 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-9] REST request to find all tricks by user: 7
2019-06-23 21:23:51,419 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-9] Request to get all tricks by userId: 7
2019-06-23 21:23:52,380 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-10] Authenticating geogeo
2019-06-23 21:23:52,446 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-10] Request to find user by username: geogeo
2019-06-23 21:23:52,468 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-2] REST request to find Categories
2019-06-23 21:23:52,469 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-2] Request to get all Categories
2019-06-23 21:23:53,486 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-5] Authenticating geogeo
2019-06-23 21:23:53,549 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-5] Request to find user by username: geogeo
2019-06-23 21:23:53,569 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-6] REST request to find Categories
2019-06-23 21:23:53,570 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-6] Request to get all Categories
2019-06-23 21:23:53,613 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-9] Authenticating geogeo
2019-06-23 21:23:53,675 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-9] Request to find user by username: geogeo
2019-06-23 21:23:53,694 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-10] REST request to find all tricks by user: 7
2019-06-23 21:23:53,695 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-10] Request to get all tricks by userId: 7
2019-06-23 21:23:54,884 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-2] Authenticating geogeo
2019-06-23 21:23:54,949 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-2] Request to find user by username: geogeo
2019-06-23 21:23:54,959 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-5] REST request to find Categories
2019-06-23 21:23:54,961 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-5] Request to get all Categories
2019-06-23 21:23:56,310 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-6] Authenticating geogeo
2019-06-23 21:23:56,376 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-6] Request to find user by username: geogeo
2019-06-23 21:23:56,395 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-9] REST request to find Categories
2019-06-23 21:23:56,396 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-9] Request to get all Categories
2019-06-23 21:23:56,431 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-10] Authenticating geogeo
2019-06-23 21:23:56,496 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-10] Request to find user by username: geogeo
2019-06-23 21:23:56,507 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-2] REST request to find all tricks by user: 7
2019-06-23 21:23:56,507 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-2] Request to get all tricks by userId: 7
2019-06-23 21:27:27,962 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-5] Authenticating geogeo
2019-06-23 21:27:28,026 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-5] Request to find user by username: geogeo
2019-06-23 21:27:28,037 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-6] REST request to find  trick by id: 11
2019-06-23 21:27:28,037 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-6] Request to get trick by id: 11
2019-06-23 21:27:28,047 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-9] Authenticating geogeo
2019-06-23 21:27:28,109 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-9] Request to find user by username: geogeo
2019-06-23 21:27:28,129 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-10] REST request to find Categories
2019-06-23 21:27:28,130 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-10] Request to get all Categories
2019-06-23 21:27:29,733 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-2] Authenticating geogeo
2019-06-23 21:27:29,805 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-2] Request to find user by username: geogeo
2019-06-23 21:27:29,815 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-5] REST request to find  trick by id: 11
2019-06-23 21:27:29,816 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-5] Request to get trick by id: 11
2019-06-23 21:27:29,835 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-6] Authenticating geogeo
2019-06-23 21:27:29,895 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-6] Request to find user by username: geogeo
2019-06-23 21:27:29,905 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-8] REST request to find Categories
2019-06-23 21:27:29,906 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-8] Request to get all Categories
2019-06-23 21:27:29,941 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-7] Authenticating geogeo
2019-06-23 21:27:30,002 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-7] Request to find user by username: geogeo
2019-06-23 21:27:30,012 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-1] REST request to find all tricks by user: 7
2019-06-23 21:27:30,013 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-1] Request to get all tricks by userId: 7
2019-06-23 21:27:41,552 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-3] Authenticating geogeo
2019-06-23 21:27:41,616 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-3] Request to find user by username: geogeo
2019-06-23 21:27:41,627 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-4] REST request to find  trick by id: 11
2019-06-23 21:27:41,627 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-4] Request to get trick by id: 11
2019-06-23 21:27:41,647 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-8] Authenticating geogeo
2019-06-23 21:27:41,710 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-8] Request to find user by username: geogeo
2019-06-23 21:27:41,730 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-7] REST request to find Categories
2019-06-23 21:27:41,731 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-7] Request to get all Categories
2019-06-23 21:27:43,617 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-1] Authenticating geogeo
2019-06-23 21:27:43,682 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-1] Request to find user by username: geogeo
2019-06-23 21:27:43,702 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-3] REST request to find  trick by id: 11
2019-06-23 21:27:43,703 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-3] Request to get trick by id: 11
2019-06-23 21:27:43,723 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-4] Authenticating geogeo
2019-06-23 21:27:43,786 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-4] Request to find user by username: geogeo
2019-06-23 21:27:43,809 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-8] REST request to find Categories
2019-06-23 21:27:43,809 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-8] Request to get all Categories
2019-06-23 21:27:43,843 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-7] Authenticating geogeo
2019-06-23 21:27:43,907 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-7] Request to find user by username: geogeo
2019-06-23 21:27:43,918 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-1] REST request to find all tricks by user: 7
2019-06-23 21:27:43,919 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-1] Request to get all tricks by userId: 7
2019-06-23 21:28:03,820 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-3] Authenticating geogeo
2019-06-23 21:28:03,896 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-3] Request to find user by username: geogeo
2019-06-23 21:28:03,908 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-4] REST request to find all tricks by user: 7
2019-06-23 21:28:03,909 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-4] Request to get all tricks by userId: 7
2019-06-23 21:28:05,090 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-8] Authenticating geogeo
2019-06-23 21:28:05,154 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-8] Request to find user by username: geogeo
2019-06-23 21:28:05,165 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-9] REST request to find  trick by id: 11
2019-06-23 21:28:05,165 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-9] Request to get trick by id: 11
2019-06-23 21:28:05,184 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-10] Authenticating geogeo
2019-06-23 21:28:05,248 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-10] Request to find user by username: geogeo
2019-06-23 21:28:05,268 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-2] REST request to find Categories
2019-06-23 21:28:05,269 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-2] Request to get all Categories
2019-06-23 21:28:07,221 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-5] Authenticating geogeo
2019-06-23 21:28:07,288 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-5] Request to find user by username: geogeo
2019-06-23 21:28:07,309 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-6] REST request to find  trick by id: 11
2019-06-23 21:28:07,310 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-6] Request to get trick by id: 11
2019-06-23 21:28:07,333 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-9] Authenticating geogeo
2019-06-23 21:28:07,396 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-9] Request to find user by username: geogeo
2019-06-23 21:28:07,407 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-10] REST request to find Categories
2019-06-23 21:28:07,408 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-10] Request to get all Categories
2019-06-23 21:28:07,442 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-2] Authenticating geogeo
2019-06-23 21:28:07,510 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-2] Request to find user by username: geogeo
2019-06-23 21:28:07,521 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-5] REST request to find all tricks by user: 7
2019-06-23 21:28:07,522 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-5] Request to get all tricks by userId: 7
2019-06-23 21:28:26,938 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-6] Authenticating geogeo
2019-06-23 21:28:27,003 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-6] Request to find user by username: geogeo
2019-06-23 21:28:27,013 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-9] REST request to find  trick by id: 11
2019-06-23 21:28:27,014 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-9] Request to get trick by id: 11
2019-06-23 21:28:27,039 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-10] Authenticating geogeo
2019-06-23 21:28:27,104 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-10] Request to find user by username: geogeo
2019-06-23 21:28:27,125 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-2] REST request to find Categories
2019-06-23 21:28:27,126 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-2] Request to get all Categories
2019-06-23 21:28:30,905 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-5] Authenticating geogeo
2019-06-23 21:28:30,971 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-5] Request to find user by username: geogeo
2019-06-23 21:28:30,992 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-6] REST request to find  trick by id: 11
2019-06-23 21:28:30,993 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-6] Request to get trick by id: 11
2019-06-23 21:28:31,017 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-9] Authenticating geogeo
2019-06-23 21:28:31,081 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-9] Request to find user by username: geogeo
2019-06-23 21:28:31,103 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-7] REST request to update a trick: TrickDTO [id=11, wording=Titre intéressant, description=Ah ah ah ceci est nul, content=Coucou c'est du contenu, categoryId=1, ownUserId=null, creationDate=null, viewNumber=null]
2019-06-23 21:28:31,104 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-7] Request to update a trick: TrickDTO [id=11, wording=Titre intéressant, description=Ah ah ah ceci est nul, content=Coucou c'est du contenu, categoryId=1, ownUserId=null, creationDate=null, viewNumber=null]
2019-06-23 21:28:31,108 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-7] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessApiUsageException: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : fr.esgi.domain.Trick.ownUser -> fr.esgi.domain.User; nested exception is java.lang.IllegalStateException: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : fr.esgi.domain.Trick.ownUser -> fr.esgi.domain.User] with root cause
org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : fr.esgi.domain.Trick.ownUser -> fr.esgi.domain.User
	at org.hibernate.engine.spi.CascadingActions$8.noCascade(CascadingActions.java:380)
	at org.hibernate.engine.internal.Cascade.cascade(Cascade.java:165)
	at org.hibernate.event.internal.AbstractFlushingEventListener.cascadeOnFlush(AbstractFlushingEventListener.java:159)
	at org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:150)
	at org.hibernate.event.internal.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:83)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:38)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1453)
	at org.hibernate.internal.SessionImpl.flush(SessionImpl.java:1439)
	at sun.reflect.GeneratedMethodAccessor240.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:308)
	at com.sun.proxy.$Proxy114.flush(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.flush(SimpleJpaRepository.java:533)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.saveAndFlush(SimpleJpaRepository.java:504)
	at sun.reflect.GeneratedMethodAccessor237.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:359)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:200)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:644)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:608)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$invoke$3(RepositoryFactorySupport.java:595)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:595)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:59)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy124.saveAndFlush(Unknown Source)
	at fr.esgi.service.impl.TrickServiceImpl.update(TrickServiceImpl.java:164)
	at fr.esgi.service.impl.TrickServiceImpl$$FastClassBySpringCGLIB$$8822d9db.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at fr.esgi.service.impl.TrickServiceImpl$$EnhancerBySpringCGLIB$$925761d2.update(<generated>)
	at fr.esgi.web.rest.TrickResource.updateTrick(TrickResource.java:222)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:919)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:663)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at fr.esgi.config.CorsFilter.doFilter(CorsFilter.java:54)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at fr.esgi.security.jwt.JWTFilter.doFilter(JWTFilter.java:37)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at fr.esgi.config.CorsFilter.doFilter(CorsFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-06-23 21:28:31,117 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-10] Authenticating geogeo
2019-06-23 21:28:31,185 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-10] Request to find user by username: geogeo
2019-06-23 21:28:31,205 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-2] REST request to find Categories
2019-06-23 21:28:31,206 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-2] Request to get all Categories
2019-06-23 21:30:26,913 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-5] Authenticating geogeo
2019-06-23 21:30:26,978 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-5] Request to find user by username: geogeo
2019-06-23 21:30:26,989 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-6] REST request to find all tricks by user: 7
2019-06-23 21:30:26,990 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-6] Request to get all tricks by userId: 7
2019-06-23 21:30:27,985 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-9] Authenticating geogeo
2019-06-23 21:30:28,049 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-9] Request to find user by username: geogeo
2019-06-23 21:30:28,068 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-10] REST request to find  trick by id: 11
2019-06-23 21:30:28,068 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-10] Request to get trick by id: 11
2019-06-23 21:30:28,092 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-2] Authenticating geogeo
2019-06-23 21:30:28,156 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-2] Request to find user by username: geogeo
2019-06-23 21:30:28,175 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-5] REST request to find Categories
2019-06-23 21:30:28,176 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-5] Request to get all Categories
2019-06-23 21:30:28,933 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-6] Authenticating geogeo
2019-06-23 21:30:28,996 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-6] Request to find user by username: geogeo
2019-06-23 21:30:29,015 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-9] REST request to find  trick by id: 11
2019-06-23 21:30:29,016 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-9] Request to get trick by id: 11
2019-06-23 21:30:29,035 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-10] Authenticating geogeo
2019-06-23 21:30:29,099 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-10] Request to find user by username: geogeo
2019-06-23 21:30:29,118 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-2] REST request to find Categories
2019-06-23 21:30:29,119 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-2] Request to get all Categories
2019-06-23 21:30:29,154 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-5] Authenticating geogeo
2019-06-23 21:30:29,216 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-5] Request to find user by username: geogeo
2019-06-23 21:30:29,236 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-6] REST request to find all tricks by user: 7
2019-06-23 21:30:29,236 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-6] Request to get all tricks by userId: 7
2019-06-23 21:30:30,615 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-9] Authenticating geogeo
2019-06-23 21:30:30,680 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-9] Request to find user by username: geogeo
2019-06-23 21:30:30,700 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-10] REST request to find Categories
2019-06-23 21:30:30,701 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-10] Request to get all Categories
2019-06-23 21:31:14,926 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-2] Authenticating geogeo
2019-06-23 21:31:14,991 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-2] Request to find user by username: geogeo
2019-06-23 21:31:15,011 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-5] REST request to find all tricks by user: 7
2019-06-23 21:31:15,012 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-5] Request to get all tricks by userId: 7
2019-06-23 21:31:15,960 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-6] Authenticating geogeo
2019-06-23 21:31:16,024 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-6] Request to find user by username: geogeo
2019-06-23 21:31:16,043 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-9] REST request to find Categories
2019-06-23 21:31:16,044 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-9] Request to get all Categories
2019-06-23 21:31:16,675 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-10] Authenticating geogeo
2019-06-23 21:31:16,738 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-10] Request to find user by username: geogeo
2019-06-23 21:31:16,759 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-2] REST request to find Categories
2019-06-23 21:31:16,760 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-2] Request to get all Categories
2019-06-23 21:31:16,801 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-5] Authenticating geogeo
2019-06-23 21:31:16,862 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-5] Request to find user by username: geogeo
2019-06-23 21:31:16,872 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-6] REST request to find all tricks by user: 7
2019-06-23 21:31:16,873 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-6] Request to get all tricks by userId: 7
2019-06-23 21:31:18,549 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-9] Authenticating geogeo
2019-06-23 21:31:18,619 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-9] Request to find user by username: geogeo
2019-06-23 21:31:18,639 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-10] REST request to find  trick by id: 11
2019-06-23 21:31:18,640 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-10] Request to get trick by id: 11
2019-06-23 21:31:18,650 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-2] Authenticating geogeo
2019-06-23 21:31:18,722 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-2] Request to find user by username: geogeo
2019-06-23 21:31:18,731 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-5] REST request to find Categories
2019-06-23 21:31:18,731 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-5] Request to get all Categories
2019-06-23 21:31:19,343 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-6] Authenticating geogeo
2019-06-23 21:31:19,406 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-6] Request to find user by username: geogeo
2019-06-23 21:31:19,417 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-9] REST request to find  trick by id: 11
2019-06-23 21:31:19,418 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-9] Request to get trick by id: 11
2019-06-23 21:31:19,432 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-10] Authenticating geogeo
2019-06-23 21:31:19,505 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-10] Request to find user by username: geogeo
2019-06-23 21:31:19,517 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-2] REST request to find Categories
2019-06-23 21:31:19,518 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-2] Request to get all Categories
2019-06-23 21:31:19,557 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-5] Authenticating geogeo
2019-06-23 21:31:19,627 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-5] Request to find user by username: geogeo
2019-06-23 21:31:19,646 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-6] REST request to find all tricks by user: 7
2019-06-23 21:31:19,647 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-6] Request to get all tricks by userId: 7
2019-06-23 21:31:26,303 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-9] Authenticating geogeo
2019-06-23 21:31:26,370 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-9] Request to find user by username: geogeo
2019-06-23 21:31:26,389 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-10] REST request to find  trick by id: 11
2019-06-23 21:31:26,390 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-10] Request to get trick by id: 11
2019-06-23 21:31:26,411 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-2] Authenticating geogeo
2019-06-23 21:31:26,481 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-2] Request to find user by username: geogeo
2019-06-23 21:31:26,496 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-5] REST request to find Categories
2019-06-23 21:31:26,497 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-5] Request to get all Categories
2019-06-23 21:31:28,493 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-6] Authenticating geogeo
2019-06-23 21:31:28,560 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-6] Request to find user by username: geogeo
2019-06-23 21:31:28,568 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-9] REST request to find  trick by id: 11
2019-06-23 21:31:28,571 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-9] Request to get trick by id: 11
2019-06-23 21:31:28,585 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-10] Authenticating geogeo
2019-06-23 21:31:28,653 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-10] Request to find user by username: geogeo
2019-06-23 21:31:28,663 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-2] REST request to find Categories
2019-06-23 21:31:28,664 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-2] Request to get all Categories
2019-06-23 21:31:28,724 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-3] Authenticating geogeo
2019-06-23 21:31:28,791 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-3] Request to find user by username: geogeo
2019-06-23 21:31:28,814 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-5] REST request to find all tricks by user: 7
2019-06-23 21:31:28,815 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-5] Request to get all tricks by userId: 7
2019-06-23 21:33:00,716 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-6] Authenticating geogeo
2019-06-23 21:33:00,781 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-6] Request to find user by username: geogeo
2019-06-23 21:33:00,792 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-9] REST request to find  trick by id: 11
2019-06-23 21:33:00,792 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-9] Request to get trick by id: 11
2019-06-23 21:33:00,817 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-10] Authenticating geogeo
2019-06-23 21:33:00,880 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-10] Request to find user by username: geogeo
2019-06-23 21:33:00,901 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-2] REST request to find Categories
2019-06-23 21:33:00,902 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-2] Request to get all Categories
2019-06-23 21:33:01,548 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-5] Authenticating geogeo
2019-06-23 21:33:01,612 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-5] Request to find user by username: geogeo
2019-06-23 21:33:01,634 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-4] REST request to find  trick by id: 11
2019-06-23 21:33:01,635 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-4] Request to get trick by id: 11
2019-06-23 21:33:01,658 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-8] Authenticating geogeo
2019-06-23 21:33:01,726 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-8] Request to find user by username: geogeo
2019-06-23 21:33:01,747 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-9] REST request to find Categories
2019-06-23 21:33:01,748 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-9] Request to get all Categories
2019-06-23 21:33:01,786 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-10] Authenticating geogeo
2019-06-23 21:33:01,853 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-10] Request to find user by username: geogeo
2019-06-23 21:33:01,872 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-2] REST request to find all tricks by user: 7
2019-06-23 21:33:01,873 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-2] Request to get all tricks by userId: 7
2019-06-23 21:33:10,729 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-5] Authenticating geogeo
2019-06-23 21:33:10,793 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-5] Request to find user by username: geogeo
2019-06-23 21:33:10,812 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-6] REST request to find  trick by id: 11
2019-06-23 21:33:10,814 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-6] Request to get trick by id: 11
2019-06-23 21:33:10,835 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-9] Authenticating geogeo
2019-06-23 21:33:10,898 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-9] Request to find user by username: geogeo
2019-06-23 21:33:10,918 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-10] REST request to find Categories
2019-06-23 21:33:10,918 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-10] Request to get all Categories
2019-06-23 21:33:16,532 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-2] Authenticating geogeo
2019-06-23 21:33:16,596 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-2] Request to find user by username: geogeo
2019-06-23 21:33:16,615 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-3] REST request to find  trick by id: 11
2019-06-23 21:33:16,617 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-3] Request to get trick by id: 11
2019-06-23 21:33:16,640 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-4] Authenticating geogeo
2019-06-23 21:33:16,702 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-4] Request to find user by username: geogeo
2019-06-23 21:33:16,711 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-8] REST request to update a trick: TrickDTO [id=11, wording=Titre intéressant, description=Ah ah ah ceci est nul !, content=Coucou c'est du contenu, categoryId=1, ownUserId=null, creationDate=null, viewNumber=null]
2019-06-23 21:33:16,712 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-8] Request to update a trick: TrickDTO [id=11, wording=Titre intéressant, description=Ah ah ah ceci est nul !, content=Coucou c'est du contenu, categoryId=1, ownUserId=null, creationDate=null, viewNumber=null]
2019-06-23 21:33:16,716 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-8] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessApiUsageException: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : fr.esgi.domain.Trick.ownUser -> fr.esgi.domain.User; nested exception is java.lang.IllegalStateException: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : fr.esgi.domain.Trick.ownUser -> fr.esgi.domain.User] with root cause
org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : fr.esgi.domain.Trick.ownUser -> fr.esgi.domain.User
	at org.hibernate.engine.spi.CascadingActions$8.noCascade(CascadingActions.java:380)
	at org.hibernate.engine.internal.Cascade.cascade(Cascade.java:165)
	at org.hibernate.event.internal.AbstractFlushingEventListener.cascadeOnFlush(AbstractFlushingEventListener.java:159)
	at org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:150)
	at org.hibernate.event.internal.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:83)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:38)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1453)
	at org.hibernate.internal.SessionImpl.flush(SessionImpl.java:1439)
	at sun.reflect.GeneratedMethodAccessor240.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:308)
	at com.sun.proxy.$Proxy114.flush(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.flush(SimpleJpaRepository.java:533)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.saveAndFlush(SimpleJpaRepository.java:504)
	at sun.reflect.GeneratedMethodAccessor237.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:359)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:200)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:644)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:608)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$invoke$3(RepositoryFactorySupport.java:595)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:595)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:59)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy124.saveAndFlush(Unknown Source)
	at fr.esgi.service.impl.TrickServiceImpl.update(TrickServiceImpl.java:164)
	at fr.esgi.service.impl.TrickServiceImpl$$FastClassBySpringCGLIB$$8822d9db.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at fr.esgi.service.impl.TrickServiceImpl$$EnhancerBySpringCGLIB$$925761d2.update(<generated>)
	at fr.esgi.web.rest.TrickResource.updateTrick(TrickResource.java:222)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:919)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:663)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at fr.esgi.config.CorsFilter.doFilter(CorsFilter.java:54)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at fr.esgi.security.jwt.JWTFilter.doFilter(JWTFilter.java:37)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at fr.esgi.config.CorsFilter.doFilter(CorsFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-06-23 21:33:16,735 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-9] Authenticating geogeo
2019-06-23 21:33:16,798 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-9] Request to find user by username: geogeo
2019-06-23 21:33:16,817 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-7] REST request to find Categories
2019-06-23 21:33:16,818 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-7] Request to get all Categories
2019-06-23 21:33:18,500 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-1] Authenticating geogeo
2019-06-23 21:33:18,567 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-1] Request to find user by username: geogeo
2019-06-23 21:33:18,579 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-3] REST request to find  trick by id: 11
2019-06-23 21:33:18,579 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-3] Request to get trick by id: 11
2019-06-23 21:33:18,603 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-4] Authenticating geogeo
2019-06-23 21:33:18,677 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-4] Request to find user by username: geogeo
2019-06-23 21:33:18,689 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-8] REST request to find Categories
2019-06-23 21:33:18,691 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-8] Request to get all Categories
2019-06-23 21:33:18,728 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-7] Authenticating geogeo
2019-06-23 21:33:18,799 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-7] Request to find user by username: geogeo
2019-06-23 21:33:18,820 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-1] REST request to find all tricks by user: 7
2019-06-23 21:33:18,820 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-1] Request to get all tricks by userId: 7
2019-06-23 21:39:27,911 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-3] Authenticating geogeo
2019-06-23 21:39:27,975 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-3] Request to find user by username: geogeo
2019-06-23 21:39:27,986 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-4] REST request to find  trick by id: 11
2019-06-23 21:39:27,987 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-4] Request to get trick by id: 11
2019-06-23 21:39:28,012 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-8] Authenticating geogeo
2019-06-23 21:39:28,081 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-8] Request to find user by username: geogeo
2019-06-23 21:39:28,090 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-7] REST request to find Categories
2019-06-23 21:39:28,091 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-7] Request to get all Categories
2019-06-23 21:39:28,850 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-1] Authenticating geogeo
2019-06-23 21:39:28,914 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-1] Request to find user by username: geogeo
2019-06-23 21:39:28,934 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-3] REST request to find  trick by id: 11
2019-06-23 21:39:28,935 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-3] Request to get trick by id: 11
2019-06-23 21:39:28,958 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-4] Authenticating geogeo
2019-06-23 21:39:29,019 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-4] Request to find user by username: geogeo
2019-06-23 21:39:29,038 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-6] REST request to find  trick by id: 11
2019-06-23 21:39:29,039 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-6] Request to get trick by id: 11
2019-06-23 21:39:29,051 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-9] REST request to update a trick: TrickDTO [id=11, wording=Titre intéressant, description=Ah ah ah ceci est nul, content=Coucou c'est du contenu, categoryId=1, ownUserId=null, creationDate=null, viewNumber=null]
2019-06-23 21:39:29,051 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-9] Request to update a trick: TrickDTO [id=11, wording=Titre intéressant, description=Ah ah ah ceci est nul, content=Coucou c'est du contenu, categoryId=1, ownUserId=null, creationDate=null, viewNumber=null]
2019-06-23 21:39:29,055 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-9] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessApiUsageException: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : fr.esgi.domain.Trick.ownUser -> fr.esgi.domain.User; nested exception is java.lang.IllegalStateException: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : fr.esgi.domain.Trick.ownUser -> fr.esgi.domain.User] with root cause
org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : fr.esgi.domain.Trick.ownUser -> fr.esgi.domain.User
	at org.hibernate.engine.spi.CascadingActions$8.noCascade(CascadingActions.java:380)
	at org.hibernate.engine.internal.Cascade.cascade(Cascade.java:165)
	at org.hibernate.event.internal.AbstractFlushingEventListener.cascadeOnFlush(AbstractFlushingEventListener.java:159)
	at org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:150)
	at org.hibernate.event.internal.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:83)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:38)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1453)
	at org.hibernate.internal.SessionImpl.flush(SessionImpl.java:1439)
	at sun.reflect.GeneratedMethodAccessor240.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:308)
	at com.sun.proxy.$Proxy114.flush(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.flush(SimpleJpaRepository.java:533)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.saveAndFlush(SimpleJpaRepository.java:504)
	at sun.reflect.GeneratedMethodAccessor237.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:359)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:200)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:644)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:608)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$invoke$3(RepositoryFactorySupport.java:595)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:595)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:59)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy124.saveAndFlush(Unknown Source)
	at fr.esgi.service.impl.TrickServiceImpl.update(TrickServiceImpl.java:164)
	at fr.esgi.service.impl.TrickServiceImpl$$FastClassBySpringCGLIB$$8822d9db.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at fr.esgi.service.impl.TrickServiceImpl$$EnhancerBySpringCGLIB$$925761d2.update(<generated>)
	at fr.esgi.web.rest.TrickResource.updateTrick(TrickResource.java:222)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:919)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:663)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at fr.esgi.config.CorsFilter.doFilter(CorsFilter.java:54)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at fr.esgi.security.jwt.JWTFilter.doFilter(JWTFilter.java:37)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at fr.esgi.config.CorsFilter.doFilter(CorsFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-06-23 21:39:29,065 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-7] Authenticating geogeo
2019-06-23 21:39:29,128 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-7] Request to find user by username: geogeo
2019-06-23 21:39:29,147 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-1] REST request to find Categories
2019-06-23 21:39:29,147 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-1] Request to get all Categories
2019-06-23 21:40:54,339 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-3] Authenticating geogeo
2019-06-23 21:40:54,403 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-3] Request to find user by username: geogeo
2019-06-23 21:40:54,422 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-4] REST request to find  trick by id: 11
2019-06-23 21:40:54,424 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-4] Request to get trick by id: 11
2019-06-23 21:40:54,442 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-8] Authenticating geogeo
2019-06-23 21:40:54,504 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-8] Request to find user by username: geogeo
2019-06-23 21:40:54,523 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-7] REST request to find  trick by id: 11
2019-06-23 21:40:54,524 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-7] Request to get trick by id: 11
2019-06-23 21:40:54,550 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-1] REST request to update a trick: TrickDTO [id=11, wording=Titre intéressant, description=Ah ah ah ceci est nul, content=Coucou c'est du contenu, categoryId=1, ownUserId=7, creationDate=2019-06-22, viewNumber=0]
2019-06-23 21:40:54,551 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-1] Request to update a trick: TrickDTO [id=11, wording=Titre intéressant, description=Ah ah ah ceci est nul, content=Coucou c'est du contenu, categoryId=1, ownUserId=7, creationDate=2019-06-22, viewNumber=0]
2019-06-23 21:40:54,571 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-3] Authenticating geogeo
2019-06-23 21:40:54,632 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-3] Request to find user by username: geogeo
2019-06-23 21:40:54,652 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-4] REST request to find Categories
2019-06-23 21:40:54,658 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-4] Request to get all Categories
2019-06-23 21:40:58,762 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-8] Authenticating geogeo
2019-06-23 21:40:58,826 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-8] Request to find user by username: geogeo
2019-06-23 21:40:58,845 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-7] REST request to find  trick by id: 11
2019-06-23 21:40:58,847 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-7] Request to get trick by id: 11
2019-06-23 21:40:58,865 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-1] Authenticating geogeo
2019-06-23 21:40:58,927 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-1] Request to find user by username: geogeo
2019-06-23 21:40:58,946 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-3] REST request to find  trick by id: 11
2019-06-23 21:40:58,947 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-3] Request to get trick by id: 11
2019-06-23 21:40:58,971 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-4] REST request to update a trick: TrickDTO [id=11, wording=Titre intéressant, description=Ah ah ah ceci est nul !!!, content=Coucou c'est du contenu, categoryId=1, ownUserId=7, creationDate=2019-06-21, viewNumber=0]
2019-06-23 21:40:58,971 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-4] Request to update a trick: TrickDTO [id=11, wording=Titre intéressant, description=Ah ah ah ceci est nul !!!, content=Coucou c'est du contenu, categoryId=1, ownUserId=7, creationDate=2019-06-21, viewNumber=0]
2019-06-23 21:40:58,990 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-8] Authenticating geogeo
2019-06-23 21:40:59,056 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-8] Request to find user by username: geogeo
2019-06-23 21:40:59,075 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-7] REST request to find Categories
2019-06-23 21:40:59,075 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-7] Request to get all Categories
2019-06-23 21:41:09,202 INFO org.springframework.boot.StartupInfoLogger [main] Starting BackEndApplication on DESKTOP-U7R4BSS with PID 5636 (C:\Users\Kyllian\eclipse-workspace\TripsBack\HelpAndLearningPlatform\back-end\target\classes started by Kyllian in C:\Users\Kyllian\eclipse-workspace\TripsBack\HelpAndLearningPlatform\back-end)
2019-06-23 21:41:09,205 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.1.4.RELEASE, Spring v5.1.6.RELEASE
2019-06-23 21:41:09,206 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: dev
2019-06-23 21:41:10,464 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data repositories in DEFAULT mode.
2019-06-23 21:41:10,591 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 119ms. Found 8 repository interfaces.
2019-06-23 21:41:11,038 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$35b6c4e2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-23 21:41:11,078 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$ce648d1c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-23 21:41:11,084 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-23 21:41:11,086 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@772861aa' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-23 21:41:11,087 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$f3392fce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-23 21:41:11,093 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-23 21:41:11,713 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8080 (http)
2019-06-23 21:41:11,731 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2019-06-23 21:41:11,747 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2019-06-23 21:41:11,747 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.17]
2019-06-23 21:41:11,903 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2019-06-23 21:41:11,906 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 2637 ms
2019-06-23 21:41:12,143 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2019-06-23 21:41:12,293 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2019-06-23 21:41:12,358 INFO org.hibernate.jpa.internal.util.LogHelper [main] HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2019-06-23 21:41:12,483 INFO org.hibernate.Version [main] HHH000412: Hibernate Core {5.3.9.Final}
2019-06-23 21:41:12,486 INFO org.hibernate.cfg.Environment [main] HHH000206: hibernate.properties not found
2019-06-23 21:41:12,716 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [main] HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2019-06-23 21:41:12,966 INFO org.hibernate.dialect.Dialect [main] HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2019-06-23 21:41:14,315 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Initialized JPA EntityManagerFactory for persistence unit 'default'
2019-06-23 21:41:15,045 INFO org.hibernate.hql.internal.QueryTranslatorFactoryInitiator [main] HHH000397: Using ASTQueryTranslatorFactory
2019-06-23 21:41:15,783 INFO springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping [main] Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2019-06-23 21:41:16,210 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: Ant [pattern='/**', OPTIONS], []
2019-06-23 21:41:16,211 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: Ant [pattern='/test/**'], []
2019-06-23 21:41:16,241 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@77e1dacd, org.springframework.security.web.context.SecurityContextPersistenceFilter@7b54a0a4, org.springframework.security.web.header.HeaderWriterFilter@6f1163f7, org.springframework.security.web.authentication.logout.LogoutFilter@5f65e0c0, fr.esgi.config.CorsFilter@3f1ef9d6, fr.esgi.security.jwt.JWTFilter@690677de, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2e64ae1a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3921e96f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1c5d376c, org.springframework.security.web.session.SessionManagementFilter@7857cb1d, org.springframework.security.web.access.ExceptionTranslationFilter@115a7e51, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1f7fcec2]
2019-06-23 21:41:16,436 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2019-06-23 21:41:16,668 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Context refreshed
2019-06-23 21:41:16,692 INFO springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper [main] Found 1 custom documentation plugin(s)
2019-06-23 21:41:16,741 INFO springfox.documentation.spring.web.scanners.ApiListingReferenceScanner [main] Scanning for api listing references
2019-06-23 21:41:17,013 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2019-06-23 21:41:17,034 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8080 (http) with context path ''
2019-06-23 21:41:17,036 INFO org.springframework.boot.StartupInfoLogger [main] Started BackEndApplication in 8.33 seconds (JVM running for 8.81)
2019-06-23 21:41:17,040 INFO fr.esgi.BackEndApplication [main] 
----------------------------------------------------------
	Application 'helpAndLearningPlatform' is running! Access URLs:
	Local: 		http://localhost:8080
	External: 	http://169.254.76.241:8080	Profile(s): 	[dev]
----------------------------------------------------------
2019-06-23 21:41:54,545 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2019-06-23 21:41:54,547 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Initializing Servlet 'dispatcherServlet'
2019-06-23 21:41:54,559 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Completed initialization in 10 ms
2019-06-23 21:41:54,804 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-1] Authenticating geogeo
2019-06-23 21:41:55,100 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-1] Request to find user by username: geogeo
2019-06-23 21:41:55,190 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-2] REST request to find  trick by id: 11
2019-06-23 21:41:55,198 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-2] Request to get trick by id: 11
2019-06-23 21:41:55,225 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-4] Authenticating geogeo
2019-06-23 21:41:55,324 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-4] Request to find user by username: geogeo
2019-06-23 21:41:55,357 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-5] REST request to find  trick by id: 11
2019-06-23 21:41:55,360 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-5] Request to get trick by id: 11
2019-06-23 21:41:55,380 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-6] REST request to update a trick: TrickDTO [id=11, wording=Titre intéressant, description=Ah ah ah ceci est nul !!!, content=Coucou c'est du contenu, categoryId=1, ownUserId=7, creationDate=2019-06-20, viewNumber=0]
2019-06-23 21:41:55,381 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-6] Request to update a trick: TrickDTO [id=11, wording=Titre intéressant, description=Ah ah ah ceci est nul !!!, content=Coucou c'est du contenu, categoryId=1, ownUserId=7, creationDate=2019-06-20, viewNumber=0]
2019-06-23 21:41:55,406 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-7] Authenticating geogeo
2019-06-23 21:41:55,500 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-7] Request to find user by username: geogeo
2019-06-23 21:41:55,523 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-8] REST request to find Categories
2019-06-23 21:41:55,528 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-8] Request to get all Categories
2019-06-23 21:42:04,946 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-10] Authenticating geogeo
2019-06-23 21:42:05,025 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-10] Request to find user by username: geogeo
2019-06-23 21:42:05,044 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-2] REST request to find  trick by id: 11
2019-06-23 21:42:05,045 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-2] Request to get trick by id: 11
2019-06-23 21:42:05,071 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-4] Authenticating geogeo
2019-06-23 21:42:05,155 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-4] Request to find user by username: geogeo
2019-06-23 21:42:05,177 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-6] REST request to find Categories
2019-06-23 21:42:05,179 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-6] Request to get all Categories
2019-06-23 21:42:05,226 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-7] Authenticating geogeo
2019-06-23 21:42:05,300 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-7] Request to find user by username: geogeo
2019-06-23 21:42:05,325 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-9] REST request to find all tricks by user: 7
2019-06-23 21:42:05,326 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-9] Request to get all tricks by userId: 7
2019-06-23 21:42:06,803 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-1] Authenticating geogeo
2019-06-23 21:42:06,875 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-1] Request to find user by username: geogeo
2019-06-23 21:42:06,902 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-3] REST request to find  trick by id: 11
2019-06-23 21:42:06,912 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-3] Request to get trick by id: 11
2019-06-23 21:42:06,941 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-5] Authenticating geogeo
2019-06-23 21:42:07,042 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-5] Request to find user by username: geogeo
2019-06-23 21:42:07,064 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-7] REST request to find Categories
2019-06-23 21:42:07,065 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-7] Request to get all Categories
2019-06-23 21:42:10,587 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-8] Authenticating geogeo
2019-06-23 21:42:10,651 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-8] Request to find user by username: geogeo
2019-06-23 21:42:10,669 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-9] REST request to find  trick by id: 11
2019-06-23 21:42:10,671 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-9] Request to get trick by id: 11
2019-06-23 21:42:10,683 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-1] Authenticating geogeo
2019-06-23 21:42:10,749 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-1] Request to find user by username: geogeo
2019-06-23 21:42:10,775 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-3] REST request to find  trick by id: 11
2019-06-23 21:42:10,776 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-3] Request to get trick by id: 11
2019-06-23 21:42:10,801 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-5] REST request to update a trick: TrickDTO [id=11, wording=Titre intéressant, description=Ah ah ah ceci est nul !!!, content=Coucou c'est du contenu ah ah, categoryId=1, ownUserId=7, creationDate=2019-06-20, viewNumber=0]
2019-06-23 21:42:10,801 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-5] Request to update a trick: TrickDTO [id=11, wording=Titre intéressant, description=Ah ah ah ceci est nul !!!, content=Coucou c'est du contenu ah ah, categoryId=1, ownUserId=7, creationDate=2019-06-20, viewNumber=0]
2019-06-23 21:42:10,828 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-6] Authenticating geogeo
2019-06-23 21:42:10,893 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-6] Request to find user by username: geogeo
2019-06-23 21:42:10,918 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-7] REST request to find Categories
2019-06-23 21:42:10,920 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-7] Request to get all Categories
2019-06-23 21:42:12,618 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-9] Authenticating geogeo
2019-06-23 21:42:12,686 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-9] Request to find user by username: geogeo
2019-06-23 21:42:12,710 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-10] REST request to find  trick by id: 11
2019-06-23 21:42:12,713 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-10] Request to get trick by id: 11
2019-06-23 21:42:12,724 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-2] Authenticating geogeo
2019-06-23 21:42:12,790 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-2] Request to find user by username: geogeo
2019-06-23 21:42:12,809 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-4] REST request to find Categories
2019-06-23 21:42:12,812 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-4] Request to get all Categories
2019-06-23 21:42:12,894 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-6] Authenticating geogeo
2019-06-23 21:42:13,005 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-6] Request to find user by username: geogeo
2019-06-23 21:42:13,036 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-8] REST request to find all tricks by user: 7
2019-06-23 21:42:13,038 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-8] Request to get all tricks by userId: 7
2019-06-23 21:42:19,126 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-10] Authenticating geogeo
2019-06-23 21:42:19,192 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-10] Request to find user by username: geogeo
2019-06-23 21:42:19,218 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-1] REST request to find  trick by id: 11
2019-06-23 21:42:19,222 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-1] Request to get trick by id: 11
2019-06-23 21:42:19,235 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-2] Authenticating geogeo
2019-06-23 21:42:19,318 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-2] Request to find user by username: geogeo
2019-06-23 21:42:19,341 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-4] REST request to find Categories
2019-06-23 21:42:19,343 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-4] Request to get all Categories
2019-06-23 21:42:44,748 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-6] Authenticating geogeo
2019-06-23 21:42:44,813 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-6] Request to find user by username: geogeo
2019-06-23 21:42:44,839 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-8] REST request to find  trick by id: 11
2019-06-23 21:42:44,841 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-8] Request to get trick by id: 11
2019-06-23 21:42:44,851 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-10] Authenticating geogeo
2019-06-23 21:42:44,915 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-10] Request to find user by username: geogeo
2019-06-23 21:42:44,928 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-2] REST request to find  trick by id: 11
2019-06-23 21:42:44,931 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-2] Request to get trick by id: 11
2019-06-23 21:42:44,947 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-4] REST request to update a trick: TrickDTO [id=11, wording=Titre intéressant sa mère, description=Ah ah ah ceci est nul !!!, content=Coucou c'est du contenu ah ah, categoryId=1, ownUserId=7, creationDate=2019-06-19, viewNumber=0]
2019-06-23 21:42:44,948 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-4] Request to update a trick: TrickDTO [id=11, wording=Titre intéressant sa mère, description=Ah ah ah ceci est nul !!!, content=Coucou c'est du contenu ah ah, categoryId=1, ownUserId=7, creationDate=2019-06-19, viewNumber=0]
2019-06-23 21:42:44,960 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-6] Authenticating geogeo
2019-06-23 21:42:45,028 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-6] Request to find user by username: geogeo
2019-06-23 21:42:45,042 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-8] REST request to find  trick by id: 11
2019-06-23 21:42:45,043 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-8] Request to get trick by id: 11
2019-06-23 21:42:45,064 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-9] Authenticating geogeo
2019-06-23 21:42:45,131 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-9] Request to find user by username: geogeo
2019-06-23 21:42:45,157 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-1] REST request to find Categories
2019-06-23 21:42:45,158 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-1] Request to get all Categories
2019-06-23 21:42:50,180 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-3] Authenticating geogeo
2019-06-23 21:42:50,247 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-3] Request to find user by username: geogeo
2019-06-23 21:42:50,270 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-5] REST request to find  trick by id: 11
2019-06-23 21:42:50,271 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-5] Request to get trick by id: 11
2019-06-23 21:42:50,292 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-7] Authenticating geogeo
2019-06-23 21:42:50,374 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-7] Request to find user by username: geogeo
2019-06-23 21:42:50,398 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-9] REST request to find  trick by id: 11
2019-06-23 21:42:50,399 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-9] Request to get trick by id: 11
2019-06-23 21:42:50,421 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-1] REST request to update a trick: TrickDTO [id=11, wording=Titre intéressant sa mère, description=Ah ah ah ceci est nul !!!, content=Coucou c'est du contenu ah ah, categoryId=3, ownUserId=7, creationDate=2019-06-18, viewNumber=0]
2019-06-23 21:42:50,422 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-1] Request to update a trick: TrickDTO [id=11, wording=Titre intéressant sa mère, description=Ah ah ah ceci est nul !!!, content=Coucou c'est du contenu ah ah, categoryId=3, ownUserId=7, creationDate=2019-06-18, viewNumber=0]
2019-06-23 21:42:50,446 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-2] Authenticating geogeo
2019-06-23 21:42:50,509 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-2] Request to find user by username: geogeo
2019-06-23 21:42:50,533 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-3] REST request to find  trick by id: 11
2019-06-23 21:42:50,533 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-3] Request to get trick by id: 11
2019-06-23 21:42:50,543 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-5] Authenticating geogeo
2019-06-23 21:42:50,609 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-5] Request to find user by username: geogeo
2019-06-23 21:42:50,632 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-7] REST request to find Categories
2019-06-23 21:42:50,634 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-7] Request to get all Categories
2019-06-23 21:42:54,724 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-9] Authenticating geogeo
2019-06-23 21:42:54,790 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-9] Request to find user by username: geogeo
2019-06-23 21:42:54,812 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-1] REST request to find  trick by id: 11
2019-06-23 21:42:54,813 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-1] Request to get trick by id: 11
2019-06-23 21:42:54,833 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-3] Authenticating geogeo
2019-06-23 21:42:54,901 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-3] Request to find user by username: geogeo
2019-06-23 21:42:54,924 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-5] REST request to find Categories
2019-06-23 21:42:54,926 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-5] Request to get all Categories
2019-06-23 21:42:54,961 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-7] Authenticating geogeo
2019-06-23 21:42:55,028 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-7] Request to find user by username: geogeo
2019-06-23 21:42:55,042 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-9] REST request to find all tricks by user: 7
2019-06-23 21:42:55,043 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-9] Request to get all tricks by userId: 7
2019-06-23 21:42:56,615 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-1] Authenticating geogeo
2019-06-23 21:42:56,682 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-1] Request to find user by username: geogeo
2019-06-23 21:42:56,706 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-3] REST request to find  trick by id: 11
2019-06-23 21:42:56,708 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-3] Request to get trick by id: 11
2019-06-23 21:42:56,729 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-5] Authenticating geogeo
2019-06-23 21:42:56,804 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-5] Request to find user by username: geogeo
2019-06-23 21:42:56,817 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-6] REST request to find Categories
2019-06-23 21:42:56,818 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-6] Request to get all Categories
2019-06-23 21:43:11,715 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-8] Authenticating geogeo
2019-06-23 21:43:11,781 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-8] Request to find user by username: geogeo
2019-06-23 21:43:11,796 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-10] REST request to find  trick by id: 11
2019-06-23 21:43:11,798 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-10] Request to get trick by id: 11
2019-06-23 21:43:11,819 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-2] Authenticating geogeo
2019-06-23 21:43:11,881 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-2] Request to find user by username: geogeo
2019-06-23 21:43:11,894 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-3] REST request to find  trick by id: 11
2019-06-23 21:43:11,895 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-3] Request to get trick by id: 11
2019-06-23 21:43:11,919 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-5] REST request to update a trick: TrickDTO [id=11, wording=Titre intéressant sa mère, description=Ah ah ah ceci est nul !!!, content=Coucou c'est du contenu ah ah, categoryId=1, ownUserId=7, creationDate=2019-06-17, viewNumber=0]
2019-06-23 21:43:11,920 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-5] Request to update a trick: TrickDTO [id=11, wording=Titre intéressant sa mère, description=Ah ah ah ceci est nul !!!, content=Coucou c'est du contenu ah ah, categoryId=1, ownUserId=7, creationDate=2019-06-17, viewNumber=0]
2019-06-23 21:43:11,942 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-6] Authenticating geogeo
2019-06-23 21:43:12,006 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-6] Request to find user by username: geogeo
2019-06-23 21:43:12,027 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-8] REST request to find  trick by id: 11
2019-06-23 21:43:12,029 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-8] Request to get trick by id: 11
2019-06-23 21:43:12,051 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-10] Authenticating geogeo
2019-06-23 21:43:12,120 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-10] Request to find user by username: geogeo
2019-06-23 21:43:12,134 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-2] REST request to find Categories
2019-06-23 21:43:12,134 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-2] Request to get all Categories
2019-06-23 21:43:14,005 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-3] Authenticating geogeo
2019-06-23 21:43:14,069 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-3] Request to find user by username: geogeo
2019-06-23 21:43:14,095 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-5] REST request to find  trick by id: 11
2019-06-23 21:43:14,095 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-5] Request to get trick by id: 11
2019-06-23 21:43:14,116 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-6] Authenticating geogeo
2019-06-23 21:43:14,180 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-6] Request to find user by username: geogeo
2019-06-23 21:43:14,204 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-8] REST request to find  trick by id: 11
2019-06-23 21:43:14,205 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-8] Request to get trick by id: 11
2019-06-23 21:43:14,226 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-10] REST request to update a trick: TrickDTO [id=11, wording=Titre intéressant sa mère, description=Ah ah ah ceci est nul !!!, content=Coucou c'est du contenu ah ah, categoryId=2, ownUserId=7, creationDate=2019-06-16, viewNumber=0]
2019-06-23 21:43:14,228 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-10] Request to update a trick: TrickDTO [id=11, wording=Titre intéressant sa mère, description=Ah ah ah ceci est nul !!!, content=Coucou c'est du contenu ah ah, categoryId=2, ownUserId=7, creationDate=2019-06-16, viewNumber=0]
2019-06-23 21:43:14,252 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-2] Authenticating geogeo
2019-06-23 21:43:14,316 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-2] Request to find user by username: geogeo
2019-06-23 21:43:14,338 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-4] REST request to find  trick by id: 11
2019-06-23 21:43:14,339 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-4] Request to get trick by id: 11
2019-06-23 21:43:14,363 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-6] Authenticating geogeo
2019-06-23 21:43:14,427 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-6] Request to find user by username: geogeo
2019-06-23 21:43:14,449 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-8] REST request to find Categories
2019-06-23 21:43:14,450 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-8] Request to get all Categories
2019-06-23 21:44:26,952 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-10] Authenticating geogeo
2019-06-23 21:44:27,016 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-10] Request to find user by username: geogeo
2019-06-23 21:44:27,039 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-1] REST request to find  trick by id: 11
2019-06-23 21:44:27,041 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-1] Request to get trick by id: 11
2019-06-23 21:44:27,062 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-3] Authenticating geogeo
2019-06-23 21:44:27,141 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-3] Request to find user by username: geogeo
2019-06-23 21:44:27,153 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-5] REST request to find  trick by id: 11
2019-06-23 21:44:27,154 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-5] Request to get trick by id: 11
2019-06-23 21:44:27,177 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-7] REST request to update a trick: TrickDTO [id=11, wording=Titre intéressant sa mère, description=Ah ah ah ceci est nul !!!, content=Coucou c'est du contenu ah ah, categoryId=5, ownUserId=7, creationDate=2019-06-15, viewNumber=0]
2019-06-23 21:44:27,179 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-7] Request to update a trick: TrickDTO [id=11, wording=Titre intéressant sa mère, description=Ah ah ah ceci est nul !!!, content=Coucou c'est du contenu ah ah, categoryId=5, ownUserId=7, creationDate=2019-06-15, viewNumber=0]
2019-06-23 21:44:27,202 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-9] Authenticating geogeo
2019-06-23 21:44:27,267 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-9] Request to find user by username: geogeo
2019-06-23 21:44:27,291 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-1] REST request to find  trick by id: 11
2019-06-23 21:44:27,292 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-1] Request to get trick by id: 11
2019-06-23 21:44:27,304 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-3] Authenticating geogeo
2019-06-23 21:44:27,369 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-3] Request to find user by username: geogeo
2019-06-23 21:44:27,381 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-4] REST request to find Categories
2019-06-23 21:44:27,381 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-4] Request to get all Categories
2019-06-23 21:44:28,835 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-6] Authenticating geogeo
2019-06-23 21:44:28,901 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-6] Request to find user by username: geogeo
2019-06-23 21:44:28,923 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-8] REST request to find  trick by id: 11
2019-06-23 21:44:28,925 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-8] Request to get trick by id: 11
2019-06-23 21:44:28,945 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-10] Authenticating geogeo
2019-06-23 21:44:29,012 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-10] Request to find user by username: geogeo
2019-06-23 21:44:29,034 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-1] REST request to find  trick by id: 11
2019-06-23 21:44:29,035 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-1] Request to get trick by id: 11
2019-06-23 21:44:29,057 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-2] REST request to update a trick: TrickDTO [id=11, wording=Titre intéressant sa mère, description=Ah ah ah ceci est nul !!!, content=Coucou c'est du contenu ah ah, categoryId=1, ownUserId=7, creationDate=2019-06-14, viewNumber=0]
2019-06-23 21:44:29,057 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-2] Request to update a trick: TrickDTO [id=11, wording=Titre intéressant sa mère, description=Ah ah ah ceci est nul !!!, content=Coucou c'est du contenu ah ah, categoryId=1, ownUserId=7, creationDate=2019-06-14, viewNumber=0]
2019-06-23 21:44:29,080 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-4] Authenticating geogeo
2019-06-23 21:44:29,143 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-4] Request to find user by username: geogeo
2019-06-23 21:44:29,165 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-6] REST request to find  trick by id: 11
2019-06-23 21:44:29,167 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-6] Request to get trick by id: 11
2019-06-23 21:44:29,189 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-8] Authenticating geogeo
2019-06-23 21:44:29,254 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-8] Request to find user by username: geogeo
2019-06-23 21:44:29,277 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-10] REST request to find Categories
2019-06-23 21:44:29,278 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-10] Request to get all Categories
2019-06-23 21:44:29,786 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-2] Authenticating geogeo
2019-06-23 21:44:29,852 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-2] Request to find user by username: geogeo
2019-06-23 21:44:29,867 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-4] REST request to find  trick by id: 11
2019-06-23 21:44:29,870 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-4] Request to get trick by id: 11
2019-06-23 21:44:29,890 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-6] Authenticating geogeo
2019-06-23 21:44:29,954 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-6] Request to find user by username: geogeo
2019-06-23 21:44:29,979 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-8] REST request to find Categories
2019-06-23 21:44:29,981 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-8] Request to get all Categories
2019-06-23 21:44:30,014 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-9] Authenticating geogeo
2019-06-23 21:44:30,078 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-9] Request to find user by username: geogeo
2019-06-23 21:44:30,099 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-10] REST request to find all tricks by user: 7
2019-06-23 21:44:30,101 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-10] Request to get all tricks by userId: 7
2019-06-23 21:44:32,176 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-2] Authenticating geogeo
2019-06-23 21:44:32,240 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-2] Request to find user by username: geogeo
2019-06-23 21:44:32,261 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-4] REST request to find  trick by id: 11
2019-06-23 21:44:32,262 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-4] Request to get trick by id: 11
2019-06-23 21:44:32,285 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-6] Authenticating geogeo
2019-06-23 21:44:32,348 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-6] Request to find user by username: geogeo
2019-06-23 21:44:32,370 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-8] REST request to find Categories
2019-06-23 21:44:32,371 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-8] Request to get all Categories
2019-06-23 21:44:34,401 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-10] Authenticating geogeo
2019-06-23 21:44:34,465 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-10] Request to find user by username: geogeo
2019-06-23 21:44:34,509 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-2] REST request to find  trick by id: 11
2019-06-23 21:44:34,510 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-2] Request to get trick by id: 11
2019-06-23 21:44:34,542 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-4] Authenticating geogeo
2019-06-23 21:44:34,619 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-4] Request to find user by username: geogeo
2019-06-23 21:44:34,640 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-6] REST request to find  trick by id: 11
2019-06-23 21:44:34,643 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-6] Request to get trick by id: 11
2019-06-23 21:44:34,653 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-8] REST request to update a trick: TrickDTO [id=11, wording=Titre intéressant sa mère, description=Ah ah ah ceci est nul !!!, content=Coucou c'est du contenu ah ah, categoryId=5, ownUserId=7, creationDate=2019-06-13, viewNumber=0]
2019-06-23 21:44:34,655 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-8] Request to update a trick: TrickDTO [id=11, wording=Titre intéressant sa mère, description=Ah ah ah ceci est nul !!!, content=Coucou c'est du contenu ah ah, categoryId=5, ownUserId=7, creationDate=2019-06-13, viewNumber=0]
2019-06-23 21:44:34,672 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-9] Authenticating geogeo
2019-06-23 21:44:34,737 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-9] Request to find user by username: geogeo
2019-06-23 21:44:34,758 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-1] REST request to find  trick by id: 11
2019-06-23 21:44:34,758 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-1] Request to get trick by id: 11
2019-06-23 21:44:34,781 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-3] Authenticating geogeo
2019-06-23 21:44:34,844 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-3] Request to find user by username: geogeo
2019-06-23 21:44:34,864 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-5] REST request to find Categories
2019-06-23 21:44:34,865 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-5] Request to get all Categories
2019-06-23 21:44:36,319 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-7] Authenticating geogeo
2019-06-23 21:44:36,384 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-7] Request to find user by username: geogeo
2019-06-23 21:44:36,395 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-8] REST request to find  trick by id: 11
2019-06-23 21:44:36,396 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-8] Request to get trick by id: 11
2019-06-23 21:44:36,406 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-10] Authenticating geogeo
2019-06-23 21:44:36,471 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-10] Request to find user by username: geogeo
2019-06-23 21:44:36,492 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-1] REST request to find Categories
2019-06-23 21:44:36,494 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-1] Request to get all Categories
2019-06-23 21:44:36,540 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-3] Authenticating geogeo
2019-06-23 21:44:36,605 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-3] Request to find user by username: geogeo
2019-06-23 21:44:36,627 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-5] REST request to find all tricks by user: 7
2019-06-23 21:44:36,628 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-5] Request to get all tricks by userId: 7
2019-06-23 21:44:37,779 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-7] Authenticating geogeo
2019-06-23 21:44:37,843 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-7] Request to find user by username: geogeo
2019-06-23 21:44:37,864 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-9] REST request to find  trick by id: 11
2019-06-23 21:44:37,864 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-9] Request to get trick by id: 11
2019-06-23 21:44:37,890 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-1] Authenticating geogeo
2019-06-23 21:44:37,953 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-1] Request to find user by username: geogeo
2019-06-23 21:44:37,974 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-3] REST request to find Categories
2019-06-23 21:44:37,975 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-3] Request to get all Categories
2019-06-23 21:45:14,129 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-5] Authenticating geogeo
2019-06-23 21:45:14,197 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-5] Request to find user by username: geogeo
2019-06-23 21:45:14,218 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-6] REST request to find  trick by id: 11
2019-06-23 21:45:14,220 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-6] Request to get trick by id: 11
2019-06-23 21:45:14,241 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-8] Authenticating geogeo
2019-06-23 21:45:14,305 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-8] Request to find user by username: geogeo
2019-06-23 21:45:14,325 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-10] REST request to find Categories
2019-06-23 21:45:14,326 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-10] Request to get all Categories
2019-06-23 21:45:14,361 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-2] Authenticating geogeo
2019-06-23 21:45:14,426 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-2] Request to find user by username: geogeo
2019-06-23 21:45:14,446 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-4] REST request to find all tricks by user: 7
2019-06-23 21:45:14,447 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-4] Request to get all tricks by userId: 7
2019-06-23 21:45:15,370 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-6] Authenticating geogeo
2019-06-23 21:45:15,434 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-6] Request to find user by username: geogeo
2019-06-23 21:45:15,456 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-8] REST request to find  trick by id: 11
2019-06-23 21:45:15,458 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-8] Request to get trick by id: 11
2019-06-23 21:45:15,480 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-10] Authenticating geogeo
2019-06-23 21:45:15,553 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-10] Request to find user by username: geogeo
2019-06-23 21:45:15,566 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-2] REST request to find Categories
2019-06-23 21:45:15,566 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-2] Request to get all Categories
2019-06-23 21:45:19,010 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-4] Authenticating geogeo
2019-06-23 21:45:19,074 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-4] Request to find user by username: geogeo
2019-06-23 21:45:19,097 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-5] REST request to find  trick by id: 11
2019-06-23 21:45:19,099 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-5] Request to get trick by id: 11
2019-06-23 21:45:19,110 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-7] Authenticating geogeo
2019-06-23 21:45:19,172 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-7] Request to find user by username: geogeo
2019-06-23 21:45:19,193 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-9] REST request to find  trick by id: 11
2019-06-23 21:45:19,211 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-9] Request to get trick by id: 11
2019-06-23 21:45:19,231 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-10] REST request to update a trick: TrickDTO [id=11, wording=Titre intéressant sa mère, description=Ah ah ah ceci est nul !!!, content=Coucou c'est du contenu ah ah, categoryId=1, ownUserId=7, creationDate=2019-06-12, viewNumber=0]
2019-06-23 21:45:19,232 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-10] Request to update a trick: TrickDTO [id=11, wording=Titre intéressant sa mère, description=Ah ah ah ceci est nul !!!, content=Coucou c'est du contenu ah ah, categoryId=1, ownUserId=7, creationDate=2019-06-12, viewNumber=0]
2019-06-23 21:45:19,244 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-2] Authenticating geogeo
2019-06-23 21:45:19,308 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-2] Request to find user by username: geogeo
2019-06-23 21:45:19,328 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-4] REST request to find  trick by id: 11
2019-06-23 21:45:19,330 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-4] Request to get trick by id: 11
2019-06-23 21:45:19,351 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-6] Authenticating geogeo
2019-06-23 21:45:19,415 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-6] Request to find user by username: geogeo
2019-06-23 21:45:19,427 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-7] REST request to find Categories
2019-06-23 21:45:19,428 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-7] Request to get all Categories
2019-06-23 21:45:21,297 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-9] Authenticating geogeo
2019-06-23 21:45:21,361 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-9] Request to find user by username: geogeo
2019-06-23 21:45:21,371 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-1] REST request to find  trick by id: 11
2019-06-23 21:45:21,372 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-1] Request to get trick by id: 11
2019-06-23 21:45:21,395 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-3] Authenticating geogeo
2019-06-23 21:45:21,458 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-3] Request to find user by username: geogeo
2019-06-23 21:45:21,479 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-5] REST request to find  trick by id: 11
2019-06-23 21:45:21,480 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-5] Request to get trick by id: 11
2019-06-23 21:45:21,492 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-7] REST request to update a trick: TrickDTO [id=11, wording=Titre intéressant sa mère, description=Ah ah ah ceci est nul !!!, content=Coucou c'est du contenu ah ah, categoryId=4, ownUserId=7, creationDate=2019-06-11, viewNumber=0]
2019-06-23 21:45:21,492 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-7] Request to update a trick: TrickDTO [id=11, wording=Titre intéressant sa mère, description=Ah ah ah ceci est nul !!!, content=Coucou c'est du contenu ah ah, categoryId=4, ownUserId=7, creationDate=2019-06-11, viewNumber=0]
2019-06-23 21:45:21,514 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-9] Authenticating geogeo
2019-06-23 21:45:21,577 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-9] Request to find user by username: geogeo
2019-06-23 21:45:21,599 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-1] REST request to find  trick by id: 11
2019-06-23 21:45:21,600 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-1] Request to get trick by id: 11
2019-06-23 21:45:21,624 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-3] Authenticating geogeo
2019-06-23 21:45:21,686 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-3] Request to find user by username: geogeo
2019-06-23 21:45:21,696 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-5] REST request to find Categories
2019-06-23 21:45:21,697 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-5] Request to get all Categories
2019-06-23 21:45:22,473 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-7] Authenticating geogeo
2019-06-23 21:45:22,542 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-7] Request to find user by username: geogeo
2019-06-23 21:45:22,563 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-9] REST request to find  trick by id: 11
2019-06-23 21:45:22,564 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-9] Request to get trick by id: 11
2019-06-23 21:45:22,585 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-10] Authenticating geogeo
2019-06-23 21:45:22,649 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-10] Request to find user by username: geogeo
2019-06-23 21:45:22,665 DEBUG fr.esgi.web.rest.CategoryResource [http-nio-8080-exec-1] REST request to find Categories
2019-06-23 21:45:22,666 DEBUG fr.esgi.service.impl.CategoryServiceImpl [http-nio-8080-exec-1] Request to get all Categories
2019-06-23 21:45:22,704 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-3] Authenticating geogeo
2019-06-23 21:45:22,772 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-3] Request to find user by username: geogeo
2019-06-23 21:45:22,795 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-5] REST request to find all tricks by user: 7
2019-06-23 21:45:22,796 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-5] Request to get all tricks by userId: 7
2019-06-23 21:46:18,267 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-7] Authenticating geogeo
2019-06-23 21:46:18,332 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-7] Request to find user by username: geogeo
2019-06-23 21:46:18,343 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-9] REST request to find all tricks by user: 7
2019-06-23 21:46:18,344 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-9] Request to get all tricks by userId: 7
2019-06-23 21:46:24,636 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-1] Authenticating geogeo
2019-06-23 21:46:24,713 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-1] Request to find user by username: geogeo
2019-06-23 21:46:24,742 DEBUG fr.esgi.web.rest.UserResource [http-nio-8080-exec-3] REST request to get user by id
2019-06-23 21:46:24,743 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-3] Request to find user by id: 7
2019-06-23 21:46:26,199 DEBUG fr.esgi.security.jwt.DomainUserDetailsService [http-nio-8080-exec-5] Authenticating geogeo
2019-06-23 21:46:26,269 DEBUG fr.esgi.service.impl.UserServiceImpl [http-nio-8080-exec-5] Request to find user by username: geogeo
2019-06-23 21:46:26,295 DEBUG fr.esgi.web.rest.TrickResource [http-nio-8080-exec-6] REST request to find all tricks by user: 7
2019-06-23 21:46:26,296 DEBUG fr.esgi.service.impl.TrickServiceImpl [http-nio-8080-exec-6] Request to get all tricks by userId: 7
